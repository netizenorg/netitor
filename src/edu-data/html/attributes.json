{
  "role": {
    "keyword": {
      "html": "<a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles\" target=\"_blank\">role</a>",
      "text": "role"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles",
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    },
    "description": {
      "html": "The <code>role</code> attribute is used to define the purpose or role of an element on a web page, improving accessibility for assistive technologies like screen readers. It is part of the <a href=\"https://www.w3.org/WAI/ARIA/\" target=\"_blank\">WAI-ARIA</a> specification and helps clarify the function of interactive and visual elements for users with disabilities.",
      "text": "The role attribute defines the purpose or role of an element to improve accessibility, particularly for assistive technologies like screen readers. It's part of the WAI-ARIA specification."
    }
  },
  "property": {
    "keyword": {
      "html": "<a href=\"https://ogp.me/\" target=\"_blank\">property</a>",
      "text": "property"
    },
    "url": "https://ogp.me/",
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta\" title=\"The HTML &lt;meta&gt; element represents metadata that cannot be represented by other HTML meta-related elements, like &lt;base&gt;, &lt;link&gt;, &lt;script&gt;, &lt;style&gt; or &lt;title&gt;.\"><code>&lt;meta&gt;</code></a>",
      "text": "<meta>"
    },
    "description": {
      "html": "This property is part of the (non-standard, but widely used) \"<a href=\"https://ogp.me/\" target=\"_blank\">open graph protocol</a>\". It's used to specify the data social media sites should use when creating \"cards\" and other dynamically generated elements when users share a link to a web page.",
      "text": "This property is part of the (non-standard, but widely used) \"open graph protocol\". It's used to specify the data social media sites should use when creating \"cards\" and other dynamically generated elements when users share a link to a web page."
    }
  },
  "accept": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept\">accept</a>",
      "text": "accept"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept",
      "https://www.w3schools.com/tags/att_accept.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>",
      "text": "<form>, <input>"
    },
    "description": {
      "html": "List of types the server accepts, typically a file type.",
      "text": "List of types the server accepts, typically a file type."
    },
    "note": null
  },
  "accept-charset": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_accept-charset.asp\">accept-charset</a>",
      "text": "accept-charset"
    },
    "url": "https://www.w3schools.com/tags/att_accept-charset.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept-charset",
      "https://www.w3schools.com/tags/att_accept-charset.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a>",
      "text": "<form>"
    },
    "description": {
      "html": "List of supported charsets.",
      "text": "List of supported charsets."
    },
    "note": null
  },
  "accesskey": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/accesskey\">accesskey</a>",
      "text": "accesskey"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/accesskey",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/accesskey",
      "https://www.w3schools.com/tags/att_accesskey.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    },
    "description": {
      "html": "Keyboard shortcut to activate or add focus to the element.",
      "text": "Keyboard shortcut to activate or add focus to the element."
    },
    "note": null
  },
  "action": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_action.asp\">action</a>",
      "text": "action"
    },
    "url": "https://www.w3schools.com/tags/att_action.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/action",
      "https://www.w3schools.com/tags/att_action.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a>",
      "text": "<form>"
    },
    "description": {
      "html": "The URI of a program that processes the information submitted via the form.",
      "text": "The URI of a program that processes the information submitted via the form."
    },
    "note": null
  },
  "align": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/align\">align</a>",
      "text": "align"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/align",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/align"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/applet\"><code>&lt;applet&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\"><code>&lt;caption&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col\"><code>&lt;col&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup\"><code>&lt;colgroup&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr\"><code>&lt;hr&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table\"><code>&lt;table&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody\"><code>&lt;tbody&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td\"><code>&lt;td&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tfoot\"><code>&lt;tfoot&gt;</code></a> , <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th\"><code>&lt;th&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead\"><code>&lt;thead&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr\"><code>&lt;tr&gt;</code></a>",
      "text": "<applet>, <caption>, <col>, <colgroup>, <hr>, <iframe>, <img>, <table>, <tbody>, <td>, <tfoot> , <th>, <thead>, <tr>"
    },
    "description": {
      "html": "Specifies the horizontal alignment of the element.",
      "text": "Specifies the horizontal alignment of the element."
    },
    "note": null
  },
  "allow": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/allow\">allow</a>",
      "text": "allow"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/allow",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/allow"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a>",
      "text": "<iframe>"
    },
    "description": {
      "html": "Specifies a feature-policy for the iframe.",
      "text": "Specifies a feature-policy for the iframe."
    },
    "note": null
  },
  "alt": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_alt.asp\">alt</a>",
      "text": "alt"
    },
    "url": "https://www.w3schools.com/tags/att_alt.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/alt",
      "https://www.w3schools.com/tags/att_alt.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/applet\"><code>&lt;applet&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area\"><code>&lt;area&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>",
      "text": "<applet>, <area>, <img>, <input>"
    },
    "description": {
      "html": "The <code>alt</code> attribute provides alternative information for an image if a user for some reason cannot view it (because of slow connection or an error in the <code>src</code> attribute). If the user is using a screen reader (because they are visually impaired for example) the <code>alt</code> attribute is also used to provide a caption to read aloud. For these reasons it also helps improve your page's <a href=\"https://en.wikipedia.org/wiki/Search_engine_optimization\" target=\"_blank\">SEO</a>.",
      "text": "The alt attribute provides alternative information for an image if a user for some reason cannot view it (because of slow connection or an error in the src attribute). If the user is using a screen reader (because they are visually impaired for example) the alt attribute is also used to provide a caption to read aloud. For these reasons it also helps improve your page's SEO."
    },
    "note": null
  },
  "async": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_async.asp\">async</a>",
      "text": "async"
    },
    "url": "https://www.w3schools.com/tags/att_async.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/async",
      "https://www.w3schools.com/tags/att_async.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a>",
      "text": "<script>"
    },
    "description": {
      "html": "Executes the script asynchronously.",
      "text": "Executes the script asynchronously."
    },
    "note": null
  },
  "autocapitalize": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/autocapitalize\">autocapitalize</a>",
      "text": "autocapitalize"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/autocapitalize",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/autocapitalize"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    },
    "description": {
      "html": "Sets whether input is automatically capitalized when entered by user",
      "text": "Sets whether input is automatically capitalized when entered by user"
    },
    "note": null
  },
  "autocomplete": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete\">autocomplete</a>",
      "text": "autocomplete"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete",
      "https://www.w3schools.com/tags/att_autocomplete.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a>",
      "text": "<form>, <input>, <select>, <textarea>"
    },
    "description": {
      "html": "Indicates whether controls in this form can by default have their values automatically completed by the browser.",
      "text": "Indicates whether controls in this form can by default have their values automatically completed by the browser."
    },
    "note": null
  },
  "autofocus": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_autofocus.asp\">autofocus</a>",
      "text": "autofocus"
    },
    "url": "https://www.w3schools.com/tags/att_autofocus.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autofocus",
      "https://www.w3schools.com/tags/att_autofocus.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button\"><code>&lt;button&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/keygen\"><code>&lt;keygen&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a>",
      "text": "<button>, <input>, <keygen>, <select>, <textarea>"
    },
    "description": {
      "html": "The element should be automatically focused after the page loaded.",
      "text": "The element should be automatically focused after the page loaded."
    },
    "note": null
  },
  "autoplay": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_autoplay.asp\">autoplay</a>",
      "text": "autoplay"
    },
    "url": "https://www.w3schools.com/tags/att_autoplay.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autoplay",
      "https://www.w3schools.com/tags/att_autoplay.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a>",
      "text": "<audio>, <video>"
    },
    "description": {
      "html": "The audio or video should play as soon as possible.",
      "text": "The audio or video should play as soon as possible."
    },
    "note": null
  },
  "background": {
    "keyword": {
      "html": "background",
      "text": "background"
    },
    "urls": [],
    "status": "obsolete",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body\"><code>&lt;body&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table\"><code>&lt;table&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td\"><code>&lt;td&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th\"><code>&lt;th&gt;</code></a>",
      "text": "<body>, <table>, <td>, <th>"
    },
    "description": {
      "html": "Specifies the URL of an image file.",
      "text": "Specifies the URL of an image file."
    },
    "note": {
      "html": "<strong>Note:</strong> Although browsers and email clients may still support this attribute, it is obsolete. Use CSS <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/background-image\"><code>background-image</code></a> instead.",
      "text": "Note: Although browsers and email clients may still support this attribute, it is obsolete. Use CSS background-image instead."
    }
  },
  "bgcolor": {
    "keyword": {
      "html": "bgcolor",
      "text": "bgcolor"
    },
    "urls": [],
    "status": "legacy",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body\"><code>&lt;body&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col\"><code>&lt;col&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup\"><code>&lt;colgroup&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/marquee\"><code>&lt;marquee&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table\"><code>&lt;table&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody\"><code>&lt;tbody&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tfoot\"><code>&lt;tfoot&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td\"><code>&lt;td&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th\"><code>&lt;th&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr\"><code>&lt;tr&gt;</code></a>",
      "text": "<body>, <col>, <colgroup>, <marquee>, <table>, <tbody>, <tfoot>, <td>, <th>, <tr>"
    },
    "description": {
      "html": "<p>Background color of the element.</p> ",
      "text": "Background color of the element. "
    },
    "note": {
      "html": "<p><strong>Note:</strong> This is a legacy attribute. Please use the CSS <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/background-color\"><code>background-color</code></a> property instead.</p>",
      "text": "Note: This is a legacy attribute. Please use the CSS background-color property instead."
    }
  },
  "border": {
    "keyword": {
      "html": "border",
      "text": "border"
    },
    "urls": [],
    "status": "legacy",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object\"><code>&lt;object&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table\"><code>&lt;table&gt;</code></a>",
      "text": "<img>, <object>, <table>"
    },
    "description": {
      "html": "<p>The border width.</p> ",
      "text": "The border width. "
    },
    "note": {
      "html": "<p><strong>Note:</strong> This is a legacy attribute. Please use the CSS <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/border\"><code>border</code></a> property instead.</p>",
      "text": "Note: This is a legacy attribute. Please use the CSS border property instead."
    }
  },
  "buffered": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/buffered\">buffered</a>",
      "text": "buffered"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/buffered",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/buffered"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a>",
      "text": "<audio>, <video>"
    },
    "description": {
      "html": "Contains the time range of already buffered media.",
      "text": "Contains the time range of already buffered media."
    },
    "note": null
  },
  "capture": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/capture\">capture</a>",
      "text": "capture"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/capture",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/capture"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>",
      "text": "<input>"
    },
    "description": {
      "html": "From the <a href=\"https://w3c.github.io/html-media-capture/#the-capture-attribute\" hreflang=\"en\" lang=\"en\" class=\"external\">HTML Media Capture<br><small lang=\"en-US\">The definition of &apos;media capture&apos; in that specification.</small></a>spec, specifies a new file can be captured.",
      "text": "From the HTML Media CaptureThe definition of 'media capture' in that specification.spec, specifies a new file can be captured."
    },
    "note": null
  },
  "challenge": {
    "keyword": {
      "html": "challenge",
      "text": "challenge"
    },
    "urls": [],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/keygen\"><code>&lt;keygen&gt;</code></a>",
      "text": "<keygen>"
    },
    "description": {
      "html": "A challenge string that is submitted along with the public key.",
      "text": "A challenge string that is submitted along with the public key."
    },
    "note": null
  },
  "charset": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_charset.asp\">charset</a>",
      "text": "charset"
    },
    "url": "https://www.w3schools.com/tags/att_charset.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/charset",
      "https://www.w3schools.com/tags/att_charset.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta\"><code>&lt;meta&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a>",
      "text": "<meta>, <script>"
    },
    "description": {
      "html": "Declares the character encoding of the page or script.",
      "text": "Declares the character encoding of the page or script."
    },
    "note": null
  },
  "checked": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_checked.asp\">checked</a>",
      "text": "checked"
    },
    "url": "https://www.w3schools.com/tags/att_checked.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/checked",
      "https://www.w3schools.com/tags/att_checked.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/command\"><code>&lt;command&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>",
      "text": "<command>, <input>"
    },
    "description": {
      "html": "Indicates whether the element should be checked on page load.",
      "text": "Indicates whether the element should be checked on page load."
    },
    "note": null
  },
  "cite": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_cite.asp\">cite</a>",
      "text": "cite"
    },
    "url": "https://www.w3schools.com/tags/att_cite.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/cite",
      "https://www.w3schools.com/tags/att_cite.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote\"><code>&lt;blockquote&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/del\"><code>&lt;del&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ins\"><code>&lt;ins&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q\"><code>&lt;q&gt;</code></a>",
      "text": "<blockquote>, <del>, <ins>, <q>"
    },
    "description": {
      "html": "Contains a URI which points to the source of the quote or change.",
      "text": "Contains a URI which points to the source of the quote or change."
    },
    "note": null
  },
  "class": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/class\">class</a>",
      "text": "class"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/class",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/class",
      "https://www.w3schools.com/tags/att_class.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    },
    "description": {
      "html": "Often used with CSS to style elements with common properties.",
      "text": "Often used with CSS to style elements with common properties."
    },
    "note": null
  },
  "code": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/code\">code</a>",
      "text": "code"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/code",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/code"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/applet\"><code>&lt;applet&gt;</code></a>",
      "text": "<applet>"
    },
    "description": {
      "html": "Specifies the URL of the applet&apos;s class file to be loaded and executed.",
      "text": "Specifies the URL of the applet's class file to be loaded and executed."
    },
    "note": null
  },
  "codebase": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/codebase\">codebase</a>",
      "text": "codebase"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/codebase",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/codebase"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/applet\"><code>&lt;applet&gt;</code></a>",
      "text": "<applet>"
    },
    "description": {
      "html": "This attribute gives the absolute or relative URL of the directory where applets&apos; .class files referenced by the code attribute are stored.",
      "text": "This attribute gives the absolute or relative URL of the directory where applets' .class files referenced by the code attribute are stored."
    },
    "note": null
  },
  "color": {
    "keyword": {
      "html": "color",
      "text": "color"
    },
    "urls": [],
    "status": "legacy",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/basefont\"><code>&lt;basefont&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font\"><code>&lt;font&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr\"><code>&lt;hr&gt;</code></a>",
      "text": "<basefont>, <font>, <hr>"
    },
    "description": {
      "html": "<p>This attribute sets the text color using either a named color or a color specified in the hexadecimal #RRGGBB format.</p> ",
      "text": "This attribute sets the text color using either a named color or a color specified in the hexadecimal #RRGGBB format. "
    },
    "note": {
      "html": "<p><strong>Note:</strong> This is a legacy attribute. Please use the CSS <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/color\"><code>color</code></a> property instead.</p>",
      "text": "Note: This is a legacy attribute. Please use the CSS color property instead."
    }
  },
  "cols": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_cols.asp\">cols</a>",
      "text": "cols"
    },
    "url": "https://www.w3schools.com/tags/att_cols.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/cols",
      "https://www.w3schools.com/tags/att_cols.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a>",
      "text": "<textarea>"
    },
    "description": {
      "html": "Defines the number of columns in a textarea.",
      "text": "Defines the number of columns in a textarea."
    },
    "note": null
  },
  "colspan": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_colspan.asp\">colspan</a>",
      "text": "colspan"
    },
    "url": "https://www.w3schools.com/tags/att_colspan.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/colspan",
      "https://www.w3schools.com/tags/att_colspan.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td\"><code>&lt;td&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th\"><code>&lt;th&gt;</code></a>",
      "text": "<td>, <th>"
    },
    "description": {
      "html": "The colspan attribute defines the number of columns a cell should span.",
      "text": "The colspan attribute defines the number of columns a cell should span."
    },
    "note": null
  },
  "content": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_content.asp\">content</a>",
      "text": "content"
    },
    "url": "https://www.w3schools.com/tags/att_content.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/content",
      "https://www.w3schools.com/tags/att_content.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta\"><code>&lt;meta&gt;</code></a>",
      "text": "<meta>"
    },
    "description": {
      "html": "A value associated with <code>http-equiv</code> or <code>name</code> depending on the context.",
      "text": "A value associated with http-equiv or name depending on the context."
    },
    "note": null
  },
  "contenteditable": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/contenteditable\">contenteditable</a>",
      "text": "contenteditable"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/contenteditable",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/contenteditable",
      "https://www.w3schools.com/tags/att_contenteditable.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    },
    "description": {
      "html": "Indicates whether the element&apos;s content is editable.",
      "text": "Indicates whether the element's content is editable."
    },
    "note": null
  },
  "contextmenu": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/contextmenu\">contextmenu</a>",
      "text": "contextmenu"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/contextmenu",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/contextmenu"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    },
    "description": {
      "html": "Defines the ID of a <a href=\"/en-US/docs/Web/HTML/Element/menu\"><code>&lt;menu&gt;</code></a> element which will serve as the element&apos;s context menu.",
      "text": "Defines the ID of a <menu> element which will serve as the element's context menu."
    },
    "note": null
  },
  "controls": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_controls.asp\">controls</a>",
      "text": "controls"
    },
    "url": "https://www.w3schools.com/tags/att_controls.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/controls",
      "https://www.w3schools.com/tags/att_controls.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a>",
      "text": "<audio>, <video>"
    },
    "description": {
      "html": "Indicates whether the browser should show playback controls to the user.",
      "text": "Indicates whether the browser should show playback controls to the user."
    },
    "note": null
  },
  "coords": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_coords.asp\">coords</a>",
      "text": "coords"
    },
    "url": "https://www.w3schools.com/tags/att_coords.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/coords",
      "https://www.w3schools.com/tags/att_coords.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area\"><code>&lt;area&gt;</code></a>",
      "text": "<area>"
    },
    "description": {
      "html": "A set of values specifying the coordinates of the hot-spot region.",
      "text": "A set of values specifying the coordinates of the hot-spot region."
    },
    "note": null
  },
  "crossorigin": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/docs/Web/HTML/CORS_settings_attributes\">crossorigin</a>",
      "text": "crossorigin"
    },
    "url": "https://developer.mozilla.org/docs/Web/HTML/CORS_settings_attributes",
    "urls": [
      "https://developer.mozilla.org/docs/Web/HTML/CORS_settings_attributes"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link\"><code>&lt;link&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a>",
      "text": "<audio>, <img>, <link>, <script>, <video>"
    },
    "description": {
      "html": "How the element handles cross-origin requests",
      "text": "How the element handles cross-origin requests"
    },
    "note": null
  },
  "csp": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/docs/Web/API/HTMLiframeElement/csp\">csp</a>",
      "text": "csp"
    },
    "url": "https://developer.mozilla.org/docs/Web/API/HTMLiframeElement/csp",
    "urls": [
      "https://developer.mozilla.org/docs/Web/API/HTMLiframeElement/csp"
    ],
    "status": "experimental",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a>",
      "text": "<iframe>"
    },
    "description": {
      "html": "Specifies the Content Security Policy that an embedded document must agree to enforce upon itself.",
      "text": "Specifies the Content Security Policy that an embedded document must agree to enforce upon itself."
    },
    "note": null
  },
  "data": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_data.asp\">data</a>",
      "text": "data"
    },
    "url": "https://www.w3schools.com/tags/att_data.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/data",
      "https://www.w3schools.com/tags/att_data.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object\"><code>&lt;object&gt;</code></a>",
      "text": "<object>"
    },
    "description": {
      "html": "Specifies the URL of the resource.",
      "text": "Specifies the URL of the resource."
    },
    "note": null
  },
  "data-*": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/data-*\">data-*</a>",
      "text": "data-*"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/data-*",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/data-*",
      "https://www.w3schools.com/tags/att_data-.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    },
    "description": {
      "html": "Lets you attach custom attributes to an HTML element.",
      "text": "Lets you attach custom attributes to an HTML element."
    },
    "note": null
  },
  "datetime": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_datetime.asp\">datetime</a>",
      "text": "datetime"
    },
    "url": "https://www.w3schools.com/tags/att_datetime.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/datetime",
      "https://www.w3schools.com/tags/att_datetime.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/del\"><code>&lt;del&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ins\"><code>&lt;ins&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time\"><code>&lt;time&gt;</code></a>",
      "text": "<del>, <ins>, <time>"
    },
    "description": {
      "html": "Indicates the date and time associated with the element.",
      "text": "Indicates the date and time associated with the element."
    },
    "note": null
  },
  "decoding": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/decoding\">decoding</a>",
      "text": "decoding"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/decoding",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/decoding"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a>",
      "text": "<img>"
    },
    "description": {
      "html": "Indicates the preferred method to decode the image.",
      "text": "Indicates the preferred method to decode the image."
    },
    "note": null
  },
  "default": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_default.asp\">default</a>",
      "text": "default"
    },
    "url": "https://www.w3schools.com/tags/att_default.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/default",
      "https://www.w3schools.com/tags/att_default.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track\"><code>&lt;track&gt;</code></a>",
      "text": "<track>"
    },
    "description": {
      "html": "Indicates that the track should be enabled unless the user&apos;s preferences indicate something different.",
      "text": "Indicates that the track should be enabled unless the user's preferences indicate something different."
    },
    "note": null
  },
  "defer": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_defer.asp\">defer</a>",
      "text": "defer"
    },
    "url": "https://www.w3schools.com/tags/att_defer.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/defer",
      "https://www.w3schools.com/tags/att_defer.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a>",
      "text": "<script>"
    },
    "description": {
      "html": "Indicates that the script should be executed after the page has been parsed.",
      "text": "Indicates that the script should be executed after the page has been parsed."
    },
    "note": null
  },
  "dir": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/dir\">dir</a>",
      "text": "dir"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/dir",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/dir",
      "https://www.w3schools.com/tags/att_dir.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    },
    "description": {
      "html": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)",
      "text": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
    },
    "note": null
  },
  "dirname": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_dirname.asp\">dirname</a>",
      "text": "dirname"
    },
    "url": "https://www.w3schools.com/tags/att_dirname.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/dirname",
      "https://www.w3schools.com/tags/att_dirname.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a>",
      "text": "<input>, <textarea>"
    },
    "description": {
      "html": "Specifies that the text direction will be submitted",
      "text": "Specifies that the text direction will be submitted"
    },
    "note": null
  },
  "disabled": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled\">disabled</a>",
      "text": "disabled"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled",
      "https://www.w3schools.com/tags/att_disabled.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button\"><code>&lt;button&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/command\"><code>&lt;command&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset\"><code>&lt;fieldset&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/keygen\"><code>&lt;keygen&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/optgroup\"><code>&lt;optgroup&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option\"><code>&lt;option&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a>",
      "text": "<button>, <command>, <fieldset>, <input>, <keygen>, <optgroup>, <option>, <select>, <textarea>"
    },
    "description": {
      "html": "Indicates whether the user can interact with the element.",
      "text": "Indicates whether the user can interact with the element."
    },
    "note": null
  },
  "download": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_download.asp\">download</a>",
      "text": "download"
    },
    "url": "https://www.w3schools.com/tags/att_download.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/download",
      "https://www.w3schools.com/tags/att_download.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a\"><code>&lt;a&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area\"><code>&lt;area&gt;</code></a>",
      "text": "<a>, <area>"
    },
    "description": {
      "html": "Indicates that the hyperlink is to be used for downloading a resource.",
      "text": "Indicates that the hyperlink is to be used for downloading a resource."
    },
    "note": null
  },
  "draggable": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/draggable\">draggable</a>",
      "text": "draggable"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/draggable",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/draggable",
      "https://www.w3schools.com/tags/att_draggable.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    },
    "description": {
      "html": "Defines whether the element can be dragged.",
      "text": "Defines whether the element can be dragged."
    },
    "note": null
  },
  "enctype": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_enctype.asp\">enctype</a>",
      "text": "enctype"
    },
    "url": "https://www.w3schools.com/tags/att_enctype.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/enctype",
      "https://www.w3schools.com/tags/att_enctype.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a>",
      "text": "<form>"
    },
    "description": {
      "html": "Defines the content type of the form data when the <code>method</code> is POST.",
      "text": "Defines the content type of the form data when the method is POST."
    },
    "note": null
  },
  "enterkeyhint": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/enterkeyhint\">enterkeyhint</a>",
      "text": "enterkeyhint"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/enterkeyhint",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/enterkeyhint"
    ],
    "status": "experimental",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/contenteditable\"><code>contenteditable</code></a>",
      "text": "<textarea>, contenteditable"
    },
    "description": {
      "html": "The <a href=\"https://html.spec.whatwg.org/dev/interaction.html#input-modalities:-the-enterkeyhint-attribute\"><code>enterkeyhint</code></a> specifies what action label (or icon) to present for the enter key on virtual keyboards. The attribute can be used with form controls (such as the value of <code>textarea</code> elements), or in elements in an editing host (e.g., using <code>contenteditable</code> attribute).",
      "text": "The enterkeyhint specifies what action label (or icon) to present for the enter key on virtual keyboards. The attribute can be used with form controls (such as the value of textarea elements), or in elements in an editing host (e.g., using contenteditable attribute)."
    },
    "note": null
  },
  "for": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_for.asp\">for</a>",
      "text": "for"
    },
    "url": "https://www.w3schools.com/tags/att_for.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/for",
      "https://www.w3schools.com/tags/att_for.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label\"><code>&lt;label&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/output\"><code>&lt;output&gt;</code></a>",
      "text": "<label>, <output>"
    },
    "description": {
      "html": "Describes elements which belongs to this one.",
      "text": "Describes elements which belongs to this one."
    },
    "note": null
  },
  "form": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_form.asp\">form</a>",
      "text": "form"
    },
    "url": "https://www.w3schools.com/tags/att_form.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/form",
      "https://www.w3schools.com/tags/att_form.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button\"><code>&lt;button&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset\"><code>&lt;fieldset&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/keygen\"><code>&lt;keygen&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label\"><code>&lt;label&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter\"><code>&lt;meter&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object\"><code>&lt;object&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/output\"><code>&lt;output&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress\"><code>&lt;progress&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a>",
      "text": "<button>, <fieldset>, <input>, <keygen>, <label>, <meter>, <object>, <output>, <progress>, <select>, <textarea>"
    },
    "description": {
      "html": "Indicates the form that is the owner of the element.",
      "text": "Indicates the form that is the owner of the element."
    },
    "note": null
  },
  "formaction": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_formaction.asp\">formaction</a>",
      "text": "formaction"
    },
    "url": "https://www.w3schools.com/tags/att_formaction.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/formaction",
      "https://www.w3schools.com/tags/att_formaction.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button\"><code>&lt;button&gt;</code></a>",
      "text": "<input>, <button>"
    },
    "description": {
      "html": "Indicates the action of the element, overriding the action defined in the <a href=\"/en-US/docs/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a>.",
      "text": "Indicates the action of the element, overriding the action defined in the <form>."
    },
    "note": null
  },
  "formenctype": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/formenctype\">formenctype</a>",
      "text": "formenctype"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/formenctype",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/formenctype"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button\"><code>&lt;button&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>",
      "text": "<button>, <input>"
    },
    "description": {
      "html": "If the button/input is a submit button (<code>type=&quot;submit&quot;</code>), this attribute sets the encoding type to use during form submission. If this attribute is specified, it overrides the <code>enctype</code> attribute of the button&apos;s <a href=\"/en-US/docs/Web/HTML/Element/form\">form</a> owner.",
      "text": "If the button/input is a submit button (type=\"submit\"), this attribute sets the encoding type to use during form submission. If this attribute is specified, it overrides the enctype attribute of the button's form owner."
    },
    "note": null
  },
  "formmethod": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/formmethod\">formmethod</a>",
      "text": "formmethod"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/formmethod",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/formmethod"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button\"><code>&lt;button&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>",
      "text": "<button>, <input>"
    },
    "description": {
      "html": "If the button/input is a submit button (<code>type=&quot;submit&quot;</code>), this attribute sets the submission method to use during form submission (<code>GET</code>, <code>POST</code>, etc.). If this attribute is specified, it overrides the <code>method</code> attribute of the button&apos;s <a href=\"/en-US/docs/Web/HTML/Element/form\">form</a> owner.",
      "text": "If the button/input is a submit button (type=\"submit\"), this attribute sets the submission method to use during form submission (GET, POST, etc.). If this attribute is specified, it overrides the method attribute of the button's form owner."
    },
    "note": null
  },
  "formnovalidate": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/formnovalidate\">formnovalidate</a>",
      "text": "formnovalidate"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/formnovalidate",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/formnovalidate"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button\"><code>&lt;button&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>",
      "text": "<button>, <input>"
    },
    "description": {
      "html": "If the button/input is a submit button (<code>type=&quot;submit&quot;</code>), this boolean attribute specifies that the form is not to be validated when it is submitted. If this attribute is specified, it overrides the <code>novalidate</code> attribute of the button&apos;s <a href=\"/en-US/docs/Web/HTML/Element/form\">form</a> owner.",
      "text": "If the button/input is a submit button (type=\"submit\"), this boolean attribute specifies that the form is not to be validated when it is submitted. If this attribute is specified, it overrides the novalidate attribute of the button's form owner."
    },
    "note": null
  },
  "formtarget": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/formtarget\">formtarget</a>",
      "text": "formtarget"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/formtarget",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/formtarget"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button\"><code>&lt;button&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>",
      "text": "<button>, <input>"
    },
    "description": {
      "html": "If the button/input is a submit button (<code>type=&quot;submit&quot;</code>), this attribute specifies the browsing context (for example, tab, window, or inline frame) in which to display the response that is received after submitting the form. If this attribute is specified, it overrides the <code>target</code> attribute of the button&apos;s <a href=\"/en-US/docs/Web/HTML/Element/form\">form</a> owner.",
      "text": "If the button/input is a submit button (type=\"submit\"), this attribute specifies the browsing context (for example, tab, window, or inline frame) in which to display the response that is received after submitting the form. If this attribute is specified, it overrides the target attribute of the button's form owner."
    },
    "note": null
  },
  "headers": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_headers.asp\">headers</a>",
      "text": "headers"
    },
    "url": "https://www.w3schools.com/tags/att_headers.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/headers",
      "https://www.w3schools.com/tags/att_headers.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td\"><code>&lt;td&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th\"><code>&lt;th&gt;</code></a>",
      "text": "<td>, <th>"
    },
    "description": {
      "html": "IDs of the <code>&lt;th&gt;</code> elements which applies to this element.",
      "text": "IDs of the <th> elements which applies to this element."
    },
    "note": null
  },
  "height": {
    "keyword": {
      "html": "<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-height\" target=\"_blank\">height</a>",
      "text": "height"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-height",
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a>",
      "text": "<iframe>"
    },
    "description": {
      "html": "<code>height</code> is an attribute specifically for <code>svg</code> or <code>iframe</code> elements (default is 150). Although in the case of an <code>iframe</code>, it's generally better practice to set the height the same way you would any other element, using the CSS <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/height\" target=\"_blank\">height</a> property.",
      "text": "height is an attribute specifically for svg or iframe elements (default is 150). Although in the case of an iframe it's generally better practice to set the height the same way you would any other element, using the CSS height property."
    }
  },
  "hidden": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/hidden\">hidden</a>",
      "text": "hidden"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/hidden",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/hidden",
      "https://www.w3schools.com/tags/att_hidden.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    },
    "description": {
      "html": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.",
      "text": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
    },
    "note": null
  },
  "high": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_high.asp\">high</a>",
      "text": "high"
    },
    "url": "https://www.w3schools.com/tags/att_high.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/high",
      "https://www.w3schools.com/tags/att_high.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter\"><code>&lt;meter&gt;</code></a>",
      "text": "<meter>"
    },
    "description": {
      "html": "Indicates the lower bound of the upper range.",
      "text": "Indicates the lower bound of the upper range."
    },
    "note": null
  },
  "href": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_href.asp\">href</a>",
      "text": "href"
    },
    "url": "https://www.w3schools.com/tags/att_href.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/href",
      "https://www.w3schools.com/tags/att_href.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a\"><code>&lt;a&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area\"><code>&lt;area&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base\"><code>&lt;base&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link\"><code>&lt;link&gt;</code></a>",
      "text": "<a>, <area>, <base>, <link>"
    },
    "description": {
      "html": "The URL of a linked resource.",
      "text": "The URL of a linked resource."
    },
    "note": null
  },
  "hreflang": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_hreflang.asp\">hreflang</a>",
      "text": "hreflang"
    },
    "url": "https://www.w3schools.com/tags/att_hreflang.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/hreflang",
      "https://www.w3schools.com/tags/att_hreflang.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a\"><code>&lt;a&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area\"><code>&lt;area&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link\"><code>&lt;link&gt;</code></a>",
      "text": "<a>, <area>, <link>"
    },
    "description": {
      "html": "Specifies the language of the linked resource.",
      "text": "Specifies the language of the linked resource."
    },
    "note": null
  },
  "http-equiv": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_http-equiv.asp\">http-equiv</a>",
      "text": "http-equiv"
    },
    "url": "https://www.w3schools.com/tags/att_http-equiv.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/http-equiv",
      "https://www.w3schools.com/tags/att_http-equiv.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta\"><code>&lt;meta&gt;</code></a>",
      "text": "<meta>"
    },
    "description": {
      "html": "Defines a pragma directive.",
      "text": "Defines a pragma directive."
    },
    "note": null
  },
  "icon": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/icon\">icon</a>",
      "text": "icon"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/icon",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/icon"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/command\"><code>&lt;command&gt;</code></a>",
      "text": "<command>"
    },
    "description": {
      "html": "Specifies a picture which represents the command.",
      "text": "Specifies a picture which represents the command."
    },
    "note": null
  },
  "id": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id\">id</a>",
      "text": "id"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id",
      "https://www.w3schools.com/tags/att_id.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    },
    "description": {
      "html": "Often used with CSS to style a specific element. The value of this attribute must be unique.",
      "text": "Often used with CSS to style a specific element. The value of this attribute must be unique."
    },
    "note": null
  },
  "importance": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/importance\">importance</a>",
      "text": "importance"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/importance",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/importance"
    ],
    "status": "experimental",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link\"><code>&lt;link&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a>",
      "text": "<iframe>, <img>, <link>, <script>"
    },
    "description": {
      "html": "Indicates the relative fetch priority for the resource.",
      "text": "Indicates the relative fetch priority for the resource."
    },
    "note": null
  },
  "integrity": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity\">integrity</a>",
      "text": "integrity"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link\"><code>&lt;link&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a>",
      "text": "<link>, <script>"
    },
    "description": {
      "html": "<p>Specifies a <a href=\"/en-US/docs/Web/Security/Subresource_Integrity\">Subresource Integrity</a> value that allows browsers to verify what they fetch.</p>",
      "text": "Specifies a Subresource Integrity value that allows browsers to verify what they fetch."
    },
    "note": null
  },
  "intrinsicsize": {
    "keyword": {
      "html": "<code>intrinsicsize</code>",
      "text": "intrinsicsize"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-intrinsicsize",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-intrinsicsize"
    ],
    "status": "deprecated",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a>",
      "text": "<img>"
    },
    "description": {
      "html": "This attribute tells the browser to ignore the actual intrinsic size of the image and pretend it&#x2019;s the size specified in the attribute.",
      "text": "This attribute tells the browser to ignore the actual intrinsic size of the image and pretend it’s the size specified in the attribute."
    },
    "note": null
  },
  "inputmode": {
    "keyword": {
      "html": "<code>inputmode</code>",
      "text": "inputmode"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/contenteditable\"><code>contenteditable</code></a>",
      "text": "<textarea>, contenteditable"
    },
    "description": {
      "html": "Provides a hint as to the type of data that might be entered by the user while editing the element or its contents. The attribute can be used with form controls (such as the value of <code>textarea</code> elements), or in elements in an editing host (e.g., using <code>contenteditable</code> attribute).",
      "text": "Provides a hint as to the type of data that might be entered by the user while editing the element or its contents. The attribute can be used with form controls (such as the value of textarea elements), or in elements in an editing host (e.g., using contenteditable attribute)."
    },
    "note": null
  },
  "ismap": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_ismap.asp\">ismap</a>",
      "text": "ismap"
    },
    "url": "https://www.w3schools.com/tags/att_ismap.asp",
    "urls": [
      "https://www.w3schools.com/tags/att_ismap.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a>",
      "text": "<img>"
    },
    "description": {
      "html": "Indicates that the image is part of a server-side image map.",
      "text": "Indicates that the image is part of a server-side image map."
    },
    "note": null
  },
  "itemprop": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/itemprop\">itemprop</a>",
      "text": "itemprop"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/itemprop",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/itemprop"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    },
    "description": {
      "html": "",
      "text": ""
    },
    "note": null
  },
  "keytype": {
    "keyword": {
      "html": "keytype",
      "text": "keytype"
    },
    "urls": [],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/keygen\"><code>&lt;keygen&gt;</code></a>",
      "text": "<keygen>"
    },
    "description": {
      "html": "Specifies the type of key generated.",
      "text": "Specifies the type of key generated."
    },
    "note": null
  },
  "kind": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_kind.asp\">kind</a>",
      "text": "kind"
    },
    "url": "https://www.w3schools.com/tags/att_kind.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/kind",
      "https://www.w3schools.com/tags/att_kind.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track\"><code>&lt;track&gt;</code></a>",
      "text": "<track>"
    },
    "description": {
      "html": "Specifies the kind of text track.",
      "text": "Specifies the kind of text track."
    },
    "note": null
  },
  "label": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_label.asp\">label</a>",
      "text": "label"
    },
    "url": "https://www.w3schools.com/tags/att_label.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/label",
      "https://www.w3schools.com/tags/att_label.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/optgroup\"><code>&lt;optgroup&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option\"><code>&lt;option&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track\"><code>&lt;track&gt;</code></a>",
      "text": "<optgroup>, <option>, <track>"
    },
    "description": {
      "html": "Specifies a user-readable title of the element.",
      "text": "Specifies a user-readable title of the element."
    },
    "note": null
  },
  "lang": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/lang\">lang</a>",
      "text": "lang"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/lang",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/lang",
      "https://www.w3schools.com/tags/att_lang.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    },
    "description": {
      "html": "Defines the language used in the element.",
      "text": "Defines the language used in the element."
    },
    "note": null
  },
  "language": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/language\">language</a>",
      "text": "language"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/language",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/language"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a>",
      "text": "<script>"
    },
    "description": {
      "html": "Defines the script language used in the element.",
      "text": "Defines the script language used in the element."
    },
    "note": null
  },
  "loading": {
    "keyword": {
      "html": "loading",
      "text": "loading"
    },
    "urls": [],
    "status": "experimental",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a>",
      "text": "<img>, <iframe>"
    },
    "description": {
      "html": "Indicates if the element should be loaded lazily (<code>loading=&quot;lazy&quot;</code>) or loaded immediately (<code>loading=&quot;eager&quot;</code>).",
      "text": "Indicates if the element should be loaded lazily (loading=\"lazy\") or loaded immediately (loading=\"eager\")."
    },
    "note": {
      "html": "<strong>WIP:</strong> <a target=\"_blank\" href=\"https://github.com/whatwg/html/pull/3752\">WHATWG PR #3752</a>",
      "text": "WIP: WHATWG PR #3752"
    }
  },
  "list": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_list.asp\">list</a>",
      "text": "list"
    },
    "url": "https://www.w3schools.com/tags/att_list.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/list",
      "https://www.w3schools.com/tags/att_list.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>",
      "text": "<input>"
    },
    "description": {
      "html": "Identifies a list of pre-defined options to suggest to the user.",
      "text": "Identifies a list of pre-defined options to suggest to the user."
    },
    "note": null
  },
  "loop": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_loop.asp\">loop</a>",
      "text": "loop"
    },
    "url": "https://www.w3schools.com/tags/att_loop.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/loop",
      "https://www.w3schools.com/tags/att_loop.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/bgsound\"><code>&lt;bgsound&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/marquee\"><code>&lt;marquee&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a>",
      "text": "<audio>, <bgsound>, <marquee>, <video>"
    },
    "description": {
      "html": "Indicates whether the media should start playing from the start when it&apos;s finished.",
      "text": "Indicates whether the media should start playing from the start when it's finished."
    },
    "note": null
  },
  "low": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_low.asp\">low</a>",
      "text": "low"
    },
    "url": "https://www.w3schools.com/tags/att_low.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/low",
      "https://www.w3schools.com/tags/att_low.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter\"><code>&lt;meter&gt;</code></a>",
      "text": "<meter>"
    },
    "description": {
      "html": "Indicates the upper bound of the lower range.",
      "text": "Indicates the upper bound of the lower range."
    },
    "note": null
  },
  "manifest": {
    "keyword": {
      "html": "manifest",
      "text": "manifest"
    },
    "urls": [],
    "status": "obsolete",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html\"><code>&lt;html&gt;</code></a>",
      "text": "<html>"
    },
    "description": {
      "html": "Specifies the URL of the document&apos;s cache manifest.",
      "text": "Specifies the URL of the document's cache manifest."
    },
    "note": {
      "html": "<strong>Note:</strong> This attribute is obsolete, use <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/Manifest\"><code>&lt;link rel=&quot;manifest&quot;&gt;</code></a> instead.",
      "text": "Note: This attribute is obsolete, use <link rel=\"manifest\"> instead."
    }
  },
  "max": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/max\">max</a>",
      "text": "max"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/max",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/max",
      "https://www.w3schools.com/tags/att_max.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter\"><code>&lt;meter&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress\"><code>&lt;progress&gt;</code></a>",
      "text": "<input>, <meter>, <progress>"
    },
    "description": {
      "html": "Indicates the maximum value allowed.",
      "text": "Indicates the maximum value allowed."
    },
    "note": null
  },
  "maxlength": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/maxlength\">maxlength</a>",
      "text": "maxlength"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/maxlength",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/maxlength",
      "https://www.w3schools.com/tags/att_maxlength.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a>",
      "text": "<input>, <textarea>"
    },
    "description": {
      "html": "Defines the maximum number of characters allowed in the element.",
      "text": "Defines the maximum number of characters allowed in the element."
    },
    "note": null
  },
  "minlength": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/minlength\">minlength</a>",
      "text": "minlength"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/minlength",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/minlength"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a>",
      "text": "<input>, <textarea>"
    },
    "description": {
      "html": "Defines the minimum number of characters allowed in the element.",
      "text": "Defines the minimum number of characters allowed in the element."
    },
    "note": null
  },
  "media": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_media.asp\">media</a>",
      "text": "media"
    },
    "url": "https://www.w3schools.com/tags/att_media.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/media",
      "https://www.w3schools.com/tags/att_media.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a\"><code>&lt;a&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area\"><code>&lt;area&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link\"><code>&lt;link&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source\"><code>&lt;source&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style\"><code>&lt;style&gt;</code></a>",
      "text": "<a>, <area>, <link>, <source>, <style>"
    },
    "description": {
      "html": "Specifies a hint of the media for which the linked resource was designed.",
      "text": "Specifies a hint of the media for which the linked resource was designed."
    },
    "note": null
  },
  "method": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_method.asp\">method</a>",
      "text": "method"
    },
    "url": "https://www.w3schools.com/tags/att_method.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/method",
      "https://www.w3schools.com/tags/att_method.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a>",
      "text": "<form>"
    },
    "description": {
      "html": "Defines which <a href=\"/en-US/docs/Web/HTTP\">HTTP</a> method to use when submitting the form. Can be <code>GET</code> (default) or <code>POST</code>.",
      "text": "Defines which HTTP method to use when submitting the form. Can be GET (default) or POST."
    },
    "note": null
  },
  "min": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/min\">min</a>",
      "text": "min"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/min",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/min",
      "https://www.w3schools.com/tags/att_min.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter\"><code>&lt;meter&gt;</code></a>",
      "text": "<input>, <meter>"
    },
    "description": {
      "html": "Indicates the minimum value allowed.",
      "text": "Indicates the minimum value allowed."
    },
    "note": null
  },
  "multiple": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/multiple\">multiple</a>",
      "text": "multiple"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/multiple",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/multiple",
      "https://www.w3schools.com/tags/att_multiple.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a>",
      "text": "<input>, <select>"
    },
    "description": {
      "html": "Indicates whether multiple values can be entered in an input of the type <code>email</code> or <code>file</code>.",
      "text": "Indicates whether multiple values can be entered in an input of the type email or file."
    },
    "note": null
  },
  "muted": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_muted.asp\">muted</a>",
      "text": "muted"
    },
    "url": "https://www.w3schools.com/tags/att_muted.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/muted",
      "https://www.w3schools.com/tags/att_muted.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a>",
      "text": "<audio>, <video>"
    },
    "description": {
      "html": "Indicates whether the audio will be initially silenced on page load.",
      "text": "Indicates whether the audio will be initially silenced on page load."
    },
    "note": null
  },
  "name": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_name.asp\">name</a>",
      "text": "name"
    },
    "url": "https://www.w3schools.com/tags/att_name.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/name",
      "https://www.w3schools.com/tags/att_name.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button\"><code>&lt;button&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset\"><code>&lt;fieldset&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/keygen\"><code>&lt;keygen&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object\"><code>&lt;object&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/output\"><code>&lt;output&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/map\"><code>&lt;map&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta\"><code>&lt;meta&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/param\"><code>&lt;param&gt;</code></a>",
      "text": "<button>, <form>, <fieldset>, <iframe>, <input>, <keygen>, <object>, <output>, <select>, <textarea>, <map>, <meta>, <param>"
    },
    "description": {
      "html": "Name of the element. For example used by the server to identify the fields in form submits.",
      "text": "Name of the element. For example used by the server to identify the fields in form submits."
    },
    "note": null
  },
  "novalidate": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_novalidate.asp\">novalidate</a>",
      "text": "novalidate"
    },
    "url": "https://www.w3schools.com/tags/att_novalidate.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/novalidate",
      "https://www.w3schools.com/tags/att_novalidate.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a>",
      "text": "<form>"
    },
    "description": {
      "html": "This attribute indicates that the form shouldn&apos;t be validated when submitted.",
      "text": "This attribute indicates that the form shouldn't be validated when submitted."
    },
    "note": null
  },
  "open": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_open.asp\">open</a>",
      "text": "open"
    },
    "url": "https://www.w3schools.com/tags/att_open.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/open",
      "https://www.w3schools.com/tags/att_open.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details\"><code>&lt;details&gt;</code></a>",
      "text": "<details>"
    },
    "description": {
      "html": "Indicates whether the details will be shown on page load.",
      "text": "Indicates whether the details will be shown on page load."
    },
    "note": null
  },
  "optimum": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_optimum.asp\">optimum</a>",
      "text": "optimum"
    },
    "url": "https://www.w3schools.com/tags/att_optimum.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/optimum",
      "https://www.w3schools.com/tags/att_optimum.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter\"><code>&lt;meter&gt;</code></a>",
      "text": "<meter>"
    },
    "description": {
      "html": "Indicates the optimal numeric value.",
      "text": "Indicates the optimal numeric value."
    },
    "note": null
  },
  "pattern": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/pattern\">pattern</a>",
      "text": "pattern"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/pattern",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/pattern",
      "https://www.w3schools.com/tags/att_pattern.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>",
      "text": "<input>"
    },
    "description": {
      "html": "Defines a regular expression which the element&apos;s value will be validated against.",
      "text": "Defines a regular expression which the element's value will be validated against."
    },
    "note": null
  },
  "ping": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-ping\">ping</a>",
      "text": "ping"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-ping",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-ping"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a\"><code>&lt;a&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area\"><code>&lt;area&gt;</code></a>",
      "text": "<a>, <area>"
    },
    "description": {
      "html": "The <code>ping</code> attribute specifies a space-separated list of URLs to be notified if a user follows the hyperlink.",
      "text": "The ping attribute specifies a space-separated list of URLs to be notified if a user follows the hyperlink."
    },
    "note": null
  },
  "placeholder": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_placeholder.asp\">placeholder</a>",
      "text": "placeholder"
    },
    "url": "https://www.w3schools.com/tags/att_placeholder.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/placeholder",
      "https://www.w3schools.com/tags/att_placeholder.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a>",
      "text": "<input>, <textarea>"
    },
    "description": {
      "html": "Provides a hint to the user of what can be entered in the field.",
      "text": "Provides a hint to the user of what can be entered in the field."
    },
    "note": null
  },
  "poster": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_poster.asp\">poster</a>",
      "text": "poster"
    },
    "url": "https://www.w3schools.com/tags/att_poster.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/poster",
      "https://www.w3schools.com/tags/att_poster.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a>",
      "text": "<video>"
    },
    "description": {
      "html": "A URL indicating a poster frame to show until the user plays or seeks.",
      "text": "A URL indicating a poster frame to show until the user plays or seeks."
    },
    "note": null
  },
  "preload": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_preload.asp\">preload</a>",
      "text": "preload"
    },
    "url": "https://www.w3schools.com/tags/att_preload.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/preload",
      "https://www.w3schools.com/tags/att_preload.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a>",
      "text": "<audio>, <video>"
    },
    "description": {
      "html": "Indicates whether the whole resource, parts of it or nothing should be preloaded.",
      "text": "Indicates whether the whole resource, parts of it or nothing should be preloaded."
    },
    "note": null
  },
  "radiogroup": {
    "keyword": {
      "html": "radiogroup",
      "text": "radiogroup"
    },
    "urls": [],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/command\"><code>&lt;command&gt;</code></a>",
      "text": "<command>"
    },
    "description": {
      "html": "",
      "text": ""
    },
    "note": null
  },
  "readonly": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly\">readonly</a>",
      "text": "readonly"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly",
      "https://www.w3schools.com/tags/att_readonly.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a>",
      "text": "<input>, <textarea>"
    },
    "description": {
      "html": "Indicates whether the element can be edited.",
      "text": "Indicates whether the element can be edited."
    },
    "note": null
  },
  "referrerpolicy": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/referralpolicy\">referrerpolicy</a>",
      "text": "referrerpolicy"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/referralpolicy",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/referralpolicy"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a\"><code>&lt;a&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area\"><code>&lt;area&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link\"><code>&lt;link&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a>",
      "text": "<a>, <area>, <iframe>, <img>, <link>, <script>"
    },
    "description": {
      "html": "Specifies which referrer is sent when fetching the resource.",
      "text": "Specifies which referrer is sent when fetching the resource."
    },
    "note": null
  },
  "rel": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel\">rel</a>",
      "text": "rel"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel",
      "https://www.w3schools.com/tags/att_rel.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a\"><code>&lt;a&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area\"><code>&lt;area&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link\"><code>&lt;link&gt;</code></a>",
      "text": "<a>, <area>, <link>"
    },
    "description": {
      "html": "Specifies the relationship of the target object to the link object.",
      "text": "Specifies the relationship of the target object to the link object."
    },
    "note": null
  },
  "required": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/required\">required</a>",
      "text": "required"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/required",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/required",
      "https://www.w3schools.com/tags/att_required.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a>",
      "text": "<input>, <select>, <textarea>"
    },
    "description": {
      "html": "Indicates whether this element is required to fill out or not.",
      "text": "Indicates whether this element is required to fill out or not."
    },
    "note": null
  },
  "reversed": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_reversed.asp\">reversed</a>",
      "text": "reversed"
    },
    "url": "https://www.w3schools.com/tags/att_reversed.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/reversed",
      "https://www.w3schools.com/tags/att_reversed.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol\"><code>&lt;ol&gt;</code></a>",
      "text": "<ol>"
    },
    "description": {
      "html": "Indicates whether the list should be displayed in a descending order instead of a ascending.",
      "text": "Indicates whether the list should be displayed in a descending order instead of a ascending."
    },
    "note": null
  },
  "rows": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_rows.asp\">rows</a>",
      "text": "rows"
    },
    "url": "https://www.w3schools.com/tags/att_rows.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rows",
      "https://www.w3schools.com/tags/att_rows.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a>",
      "text": "<textarea>"
    },
    "description": {
      "html": "Defines the number of rows in a text area.",
      "text": "Defines the number of rows in a text area."
    },
    "note": null
  },
  "rowspan": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_rowspan.asp\">rowspan</a>",
      "text": "rowspan"
    },
    "url": "https://www.w3schools.com/tags/att_rowspan.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rowspan",
      "https://www.w3schools.com/tags/att_rowspan.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td\"><code>&lt;td&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th\"><code>&lt;th&gt;</code></a>",
      "text": "<td>, <th>"
    },
    "description": {
      "html": "Defines the number of rows a table cell should span over.",
      "text": "Defines the number of rows a table cell should span over."
    },
    "note": null
  },
  "sandbox": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-sandbox\">sandbox</a>",
      "text": "sandbox"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-sandbox",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-sandbox",
      "https://www.w3schools.com/tags/att_sandbox.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a>",
      "text": "<iframe>"
    },
    "description": {
      "html": "Stops a document loaded in an iframe from using certain features (such as submitting forms or opening new windows).",
      "text": "Stops a document loaded in an iframe from using certain features (such as submitting forms or opening new windows)."
    },
    "note": null
  },
  "scope": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_scope.asp\">scope</a>",
      "text": "scope"
    },
    "url": "https://www.w3schools.com/tags/att_scope.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/scope",
      "https://www.w3schools.com/tags/att_scope.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th\"><code>&lt;th&gt;</code></a>",
      "text": "<th>"
    },
    "description": {
      "html": "Defines the cells that the header test (defined in the <code>th</code> element) relates to.",
      "text": "Defines the cells that the header test (defined in the th element) relates to."
    },
    "note": null
  },
  "scoped": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/scoped\">scoped</a>",
      "text": "scoped"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/scoped",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/scoped"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style\"><code>&lt;style&gt;</code></a>",
      "text": "<style>"
    },
    "description": {
      "html": "",
      "text": ""
    },
    "note": null
  },
  "selected": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_selected.asp\">selected</a>",
      "text": "selected"
    },
    "url": "https://www.w3schools.com/tags/att_selected.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/selected",
      "https://www.w3schools.com/tags/att_selected.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option\"><code>&lt;option&gt;</code></a>",
      "text": "<option>"
    },
    "description": {
      "html": "Defines a value which will be selected on page load.",
      "text": "Defines a value which will be selected on page load."
    },
    "note": null
  },
  "shape": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_shape.asp\">shape</a>",
      "text": "shape"
    },
    "url": "https://www.w3schools.com/tags/att_shape.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/shape",
      "https://www.w3schools.com/tags/att_shape.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a\"><code>&lt;a&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area\"><code>&lt;area&gt;</code></a>",
      "text": "<a>, <area>"
    },
    "description": {
      "html": "Specifies the shape of the area",
      "text": "Specifies the shape of the area"
    },
    "note": null
  },
  "size": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/size\">size</a>",
      "text": "size"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/size",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/size",
      "https://www.w3schools.com/tags/att_size.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a>",
      "text": "<input>, <select>"
    },
    "description": {
      "html": "Defines the width of the element (in pixels). If the element&apos;s <code>type</code> attribute is <code>text</code> or <code>password</code> then it&apos;s the number of characters.",
      "text": "Defines the width of the element (in pixels). If the element's type attribute is text or password then it's the number of characters."
    },
    "note": null
  },
  "sizes": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_sizes.asp\">sizes</a>",
      "text": "sizes"
    },
    "url": "https://www.w3schools.com/tags/att_sizes.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/sizes",
      "https://www.w3schools.com/tags/att_sizes.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link\"><code>&lt;link&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source\"><code>&lt;source&gt;</code></a>",
      "text": "<link>, <img>, <source>"
    },
    "description": {
      "html": "Specifies the size of the linked resource",
      "text": "Specifies the size of the linked resource"
    },
    "note": null
  },
  "slot": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/slot\">slot</a>",
      "text": "slot"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/slot",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/slot"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    },
    "description": {
      "html": "Assigns a slot in a shadow DOM shadow tree to an element.",
      "text": "Assigns a slot in a shadow DOM shadow tree to an element."
    },
    "note": null
  },
  "span": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_span.asp\">span</a>",
      "text": "span"
    },
    "url": "https://www.w3schools.com/tags/att_span.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/span",
      "https://www.w3schools.com/tags/att_span.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col\"><code>&lt;col&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup\"><code>&lt;colgroup&gt;</code></a>",
      "text": "<col>, <colgroup>"
    },
    "description": {
      "html": "Specifies the number of columns to span",
      "text": "Specifies the number of columns to span"
    },
    "note": null
  },
  "spellcheck": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/spellcheck\">spellcheck</a>",
      "text": "spellcheck"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/spellcheck",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/spellcheck",
      "https://www.w3schools.com/tags/att_spellcheck.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    },
    "description": {
      "html": "Indicates whether spell checking is allowed for the element.",
      "text": "Indicates whether spell checking is allowed for the element."
    },
    "note": null
  },
  "src": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_src.asp\">src</a>",
      "text": "src"
    },
    "url": "https://www.w3schools.com/tags/att_src.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/src",
      "https://www.w3schools.com/tags/att_src.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed\"><code>&lt;embed&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source\"><code>&lt;source&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track\"><code>&lt;track&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a>",
      "text": "<audio>, <embed>, <iframe>, <img>, <input>, <script>, <source>, <track>, <video>"
    },
    "description": {
      "html": "The <code>src</code> attribute is used to embed content (other assets or even other web pages), by assigning a URL to another file's location as it's value.",
      "text": "The src attribute is used to embed content (other assets or even other web pages), by assigning a URL to another file's location as it's value."
    },
    "note": null
  },
  "srcdoc": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_srcdoc.asp\">srcdoc</a>",
      "text": "srcdoc"
    },
    "url": "https://www.w3schools.com/tags/att_srcdoc.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/srcdoc",
      "https://www.w3schools.com/tags/att_srcdoc.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a>",
      "text": "<iframe>"
    },
    "description": {
      "html": "Specifies the HTML content of the page to show in the <iframe>",
      "text": "Specifies the HTML content of the page to show in the <iframe>"
    },
    "note": null
  },
  "srclang": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_srclang.asp\">srclang</a>",
      "text": "srclang"
    },
    "url": "https://www.w3schools.com/tags/att_srclang.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/srclang",
      "https://www.w3schools.com/tags/att_srclang.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track\"><code>&lt;track&gt;</code></a>",
      "text": "<track>"
    },
    "description": {
      "html": "Specifies the language of the track text data (required if kind=\"subtitles\")",
      "text": "Specifies the language of the track text data (required if kind=\"subtitles\")"
    },
    "note": null
  },
  "srcset": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_source_srcset.asp\">srcset</a>",
      "text": "srcset"
    },
    "url": "https://www.w3schools.com/tags/att_source_srcset.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/srcset",
      "https://www.w3schools.com/tags/att_source_srcset.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source\"><code>&lt;source&gt;</code></a>",
      "text": "<img>, <source>"
    },
    "description": {
      "html": "One or more responsive image candidates.",
      "text": "One or more responsive image candidates."
    },
    "note": null
  },
  "start": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_start.asp\">start</a>",
      "text": "start"
    },
    "url": "https://www.w3schools.com/tags/att_start.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/start",
      "https://www.w3schools.com/tags/att_start.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol\"><code>&lt;ol&gt;</code></a>",
      "text": "<ol>"
    },
    "description": {
      "html": "Defines the first number if other than 1.",
      "text": "Defines the first number if other than 1."
    },
    "note": null
  },
  "step": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/step\">step</a>",
      "text": "step"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/step",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/step",
      "https://www.w3schools.com/tags/att_step.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>",
      "text": "<input>"
    },
    "description": {
      "html": "Specifies the legal number intervals for an input field",
      "text": "Specifies the legal number intervals for an input field"
    },
    "note": null
  },
  "style": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/style\">style</a>",
      "text": "style"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/style",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/style",
      "https://www.w3schools.com/tags/att_style.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    },
    "description": {
      "html": "Using the <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/style\" target=\"_blank\">style</a> attribute is one of three ways to include CSS code in your HTML. This approach is known as \"inline styling\" because you're writing your CSS declarations in the same line as the element you want to style. Another approach would be to define CSS rules within a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style\" target=\"_blank\">&lt;style&gt;</a> element or in an external CSS file. Checkout this <a href=\"https://www.w3schools.com/CSS/css_howto.asp\" target=\"_blank\">CSS reference</a> to learn more about these different approaches.",
      "text": "Using the style attribute is one of three ways to include CSS code in your HTML. This approach is known as \"inline styling\" because you're writing your CSS declarations in the same line as the element you want to style. Another approach would be to define CSS rules within a <style> element or in an external CSS file."
    },
    "note": null
  },
  "summary": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/summary\">summary</a>",
      "text": "summary"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/summary",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/summary"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table\"><code>&lt;table&gt;</code></a>",
      "text": "<table>"
    },
    "description": {
      "html": "",
      "text": ""
    },
    "note": null
  },
  "tabindex": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\">tabindex</a>",
      "text": "tabindex"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex",
      "https://www.w3schools.com/tags/att_tabindex.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    },
    "description": {
      "html": "Overrides the browser&apos;s default tab order and follows the one specified instead.",
      "text": "Overrides the browser's default tab order and follows the one specified instead."
    },
    "note": null
  },
  "target": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_target.asp\">target</a>",
      "text": "target"
    },
    "url": "https://www.w3schools.com/tags/att_target.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/target",
      "https://www.w3schools.com/tags/att_target.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a\"><code>&lt;a&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area\"><code>&lt;area&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base\"><code>&lt;base&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a>",
      "text": "<a>, <area>, <base>, <form>"
    },
    "description": {
      "html": "Specifies where to open the linked document (in the case of an <code>&lt;a&gt;</code> element) or where to display the response received (in the case of a <code>&lt;form&gt;</code> element). Setting it's value to <code>target=\"_blank\"</code> for example will open the linked page on a new tab.",
      "text": "Specifies where to open the linked document (in the case of an <a> element) or where to display the response received (in the case of a <form> element). Setting it's value to target=\"_blank\" for example will open the linked page on a new tab."
    },
    "note": null
  },
  "title": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/title\">title</a>",
      "text": "title"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/title",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/title",
      "https://www.w3schools.com/tags/att_title.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    },
    "description": {
      "html": "Text to be displayed in a tooltip when hovering over the element.",
      "text": "Text to be displayed in a tooltip when hovering over the element."
    },
    "note": null
  },
  "translate": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_translate.asp\">translate</a>",
      "text": "translate"
    },
    "url": "https://www.w3schools.com/tags/att_translate.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/translate",
      "https://www.w3schools.com/tags/att_translate.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    },
    "description": {
      "html": "Specify whether an element&#x2019;s attribute values and the values of its <code><a href=\"https://dom.spec.whatwg.org/#text\" id=\"ref-for-text&#x2460;&#x2466;\">Text</a></code> node children are to be translated when the page is localized, or whether to leave them unchanged.",
      "text": "Specify whether an element’s attribute values and the values of its Text node children are to be translated when the page is localized, or whether to leave them unchanged."
    },
    "note": null
  },
  "type": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_type.asp\">type</a>",
      "text": "type"
    },
    "url": "https://www.w3schools.com/tags/att_type.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/type",
      "https://www.w3schools.com/tags/att_type.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button\"><code>&lt;button&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/command\"><code>&lt;command&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed\"><code>&lt;embed&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object\"><code>&lt;object&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source\"><code>&lt;source&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style\"><code>&lt;style&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/menu\"><code>&lt;menu&gt;</code></a>",
      "text": "<button>, <input>, <command>, <embed>, <object>, <script>, <source>, <style>, <menu>"
    },
    "description": {
      "html": "Defines the type of the element.",
      "text": "Defines the type of the element."
    },
    "note": null
  },
  "usemap": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_usemap.asp\">usemap</a>",
      "text": "usemap"
    },
    "url": "https://www.w3schools.com/tags/att_usemap.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/usemap",
      "https://www.w3schools.com/tags/att_usemap.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object\"><code>&lt;object&gt;</code></a>",
      "text": "<img>, <input>, <object>"
    },
    "description": {
      "html": "Specifies an image as a client-side image map",
      "text": "Specifies an image as a client-side image map"
    },
    "note": null
  },
  "value": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_value.asp\">value</a>",
      "text": "value"
    },
    "url": "https://www.w3schools.com/tags/att_value.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/value",
      "https://www.w3schools.com/tags/att_value.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button\"><code>&lt;button&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/data\"><code>&lt;data&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li\"><code>&lt;li&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter\"><code>&lt;meter&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option\"><code>&lt;option&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress\"><code>&lt;progress&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/param\"><code>&lt;param&gt;</code></a>",
      "text": "<button>, <data>, <input>, <li>, <meter>, <option>, <progress>, <param>"
    },
    "description": {
      "html": "Defines a default value which will be displayed in the element on page load.",
      "text": "Defines a default value which will be displayed in the element on page load."
    },
    "note": null
  },
  "width": {
    "keyword": {
      "html": "<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-width\" target=\"_blank\">width</a>",
      "text": "width"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-width",
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a>",
      "text": "<iframe>"
    },
    "description": {
      "html": "<code>width</code> is an attribute specifically for <code>svg</code> or <code>iframe</code> elements (default is 300). Although in the case of an iframe, it's generally better practice to set the width the same way you would any other element, using the CSS <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/width\" target=\"_blank\">width</a> property.",
      "text": "width is an attribute specifically for svg or iframe elements (default is 300). Although in the case of an iframe, it's generally better practice to set the width of an iframe the same way you would any other element, using the CSS width property."
    }
  },
  "wrap": {
    "keyword": {
      "html": "<a target=\"_blank\" href=\"https://www.w3schools.com/tags/att_wrap.asp\">wrap</a>",
      "text": "wrap"
    },
    "url": "https://www.w3schools.com/tags/att_wrap.asp",
    "urls": [
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/wrap",
      "https://www.w3schools.com/tags/att_wrap.asp"
    ],
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a>",
      "text": "<textarea>"
    },
    "description": {
      "html": "Indicates whether the text should be wrapped.",
      "text": "Indicates whether the text should be wrapped."
    },
    "note": null
  },
  "allowfullscreen": {
    "keyword": {
      "html": "<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-allowfullscreen/\" target=\"_blank\">allowfullscreen</a>",
      "text": "allowfullscreen"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-allowfullscreen/",
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a>",
      "text": "<iframe>"
    },
    "description": {
      "html": "<code>allowfullscreen</code> is an attribute specifically for <code>iframe</code> elements. Though <code>iframes</code> can be used to embed any other website into a page, it is often used to embed sites that stream videos (like YouTube or Vimeo), this attribute allows that these iframes to be displayed in fullscreen mode.",
      "text": "allowfullscreen is an attribute specifically for iframe elements. Though iframes can be used to embed any other website into a page, it is often used to embed sites that stream videos (like YouTube or Vimeo), this attribute allows that these iframes to be displayed in fullscreen mode."
    }
  },
  "frameborder": {
    "keyword": {
      "html": "<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-frameborder\" target=\"_blank\">frameborder</a>",
      "text": "frameborder"
    },
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-frameborder",
    "status": "standard",
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a>",
      "text": "<iframe>"
    },
    "description": {
      "html": "<code>frameborder</code> is an attribute specifically for <code>iframe</code> elements. The value 1 (the default) draws a border around this frame. The value 0 removes the border around this frame, but you instead use the CSS property border to control <code>iframe</code> borders instead.",
      "text": "frameborder is an attribute specifically for iframe elements. The value 1 (the default) draws a border around this frame. The value 0 removes the border around this frame, but you should use the CSS property border to control iframe borders instead."
    }
  },
  "onabort": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onabort.asp\" target=\"_blank\">onabort</a>",
      "text": "onabort"
    },
    "url": "https://www.w3schools.com/jsref/event_onabort.asp",
    "status": "standard",
    "description": {
      "html": "The onabort event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal/abort_event\" target=\"_blank\">AbortSignal</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/FileReader/abort_event\" target=\"_blank\">FileReader</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/abort_event\" target=\"_blank\">HTMLMediaElement</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/IDBTransaction/abort_event\" target=\"_blank\">IDBDatabase</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/IDBTransaction/abort_event\" target=\"_blank\">IDBTransaction</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/abort_event\" target=\"_blank\">XMLHttpRequest</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onabort) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The onabort event can be used on a few different types of elements, including AbortSignal, FileReader, HTMLMediaElement, IDBDatabase, IDBTransaction, and XMLHttpRequest. That said, it's better to use addEventListener instead of \"on\" event attributes (like onabort) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onafterprint": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onafterprint.asp\" target=\"_blank\">onafterprint</a>",
      "text": "onafterprint"
    },
    "url": "https://www.w3schools.com/jsref/event_onafterprint.asp",
    "status": "standard",
    "description": {
      "html": "The <strong><code>afterprint</code></strong> event is fired after the associated document has started printing or the print preview has been closed. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onafterprint) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The afterprint event is fired after the associated document has started printing or the print preview has been closed. That said, it's better to use addEventListener instead of \"on\" event attributes (like onafterprint) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onanimationend": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onanimationend.asp\" target=\"_blank\">onanimationend</a>",
      "text": "onanimationend"
    },
    "url": "https://www.w3schools.com/jsref/event_onanimationend.asp",
    "status": "standard",
    "description": {
      "html": "The onanimationend event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/animationend_event\" target=\"_blank\">Document</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/animationend_event\" target=\"_blank\">Element</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/animationend_event\" target=\"_blank\">Window</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onanimationend) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The onanimationend event can be used on a few different types of elements, including Document, Element, and Window. That said, it's better to use addEventListener instead of \"on\" event attributes (like onanimationend) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onanimationiteration": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onanimationiteration.asp\" target=\"_blank\">onanimationiteration</a>",
      "text": "onanimationiteration"
    },
    "url": "https://www.w3schools.com/jsref/event_onanimationiteration.asp",
    "status": "standard",
    "description": {
      "html": "The onanimationiteration event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/animationiteration_event\" target=\"_blank\">Document</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/animationiteration_event\" target=\"_blank\">Element</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/animationiteration_event\" target=\"_blank\">Window</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onanimationiteration) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The onanimationiteration event can be used on a few different types of elements, including Document, Element, and Window. That said, it's better to use addEventListener instead of \"on\" event attributes (like onanimationiteration) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onanimationstart": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onanimationstart.asp\" target=\"_blank\">onanimationstart</a>",
      "text": "onanimationstart"
    },
    "url": "https://www.w3schools.com/jsref/event_onanimationstart.asp",
    "status": "standard",
    "description": {
      "html": "The onanimationstart event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/animationstart_event\" target=\"_blank\">Document</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/animationstart_event\" target=\"_blank\">Element</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/animationstart_event\" target=\"_blank\">Window</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onanimationstart) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The onanimationstart event can be used on a few different types of elements, including Document, Element, and Window. That said, it's better to use addEventListener instead of \"on\" event attributes (like onanimationstart) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onbeforeprint": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onbeforeprint.asp\" target=\"_blank\">onbeforeprint</a>",
      "text": "onbeforeprint"
    },
    "url": "https://www.w3schools.com/jsref/event_onbeforeprint.asp",
    "status": "standard",
    "description": {
      "html": "The <strong><code>beforeprint</code></strong> event is fired when the associated document is about to be printed or previewed for printing. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onbeforeprint) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The beforeprint event is fired when the associated document is about to be printed or previewed for printing. That said, it's better to use addEventListener instead of \"on\" event attributes (like onbeforeprint) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onbeforeunload": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onbeforeunload.asp\" target=\"_blank\">onbeforeunload</a>",
      "text": "onbeforeunload"
    },
    "url": "https://www.w3schools.com/jsref/event_onbeforeunload.asp",
    "status": "standard",
    "description": {
      "html": "The <strong><code>beforeunload</code></strong> event is fired when the window, the document and its resources are about to be unloaded. The document is still visible and the event is still cancelable at this point. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onbeforeunload) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The beforeunload event is fired when the window, the document and its resources are about to be unloaded. The document is still visible and the event is still cancelable at this point. That said, it's better to use addEventListener instead of \"on\" event attributes (like onbeforeunload) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onblur": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onblur.asp\" target=\"_blank\">onblur</a>",
      "text": "onblur"
    },
    "url": "https://www.w3schools.com/jsref/event_onblur.asp",
    "status": "standard",
    "description": {
      "html": "The onblur event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/blur_event\" target=\"_blank\">Element</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/blur_event\" target=\"_blank\">Window</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onblur) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The onblur event can be used on a few different types of elements, including Element, and Window. That said, it's better to use addEventListener instead of \"on\" event attributes (like onblur) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "oncanplay": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_oncanplay.asp\" target=\"_blank\">oncanplay</a>",
      "text": "oncanplay"
    },
    "url": "https://www.w3schools.com/jsref/event_oncanplay.asp",
    "status": "standard",
    "description": {
      "html": "The <code>canplay</code> event is fired when the user agent can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like oncanplay) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The canplay event is fired when the user agent can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content. That said, it's better to use addEventListener instead of \"on\" event attributes (like oncanplay) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "oncanplaythrough": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_oncanplaythrough.asp\" target=\"_blank\">oncanplaythrough</a>",
      "text": "oncanplaythrough"
    },
    "url": "https://www.w3schools.com/jsref/event_oncanplaythrough.asp",
    "status": "standard",
    "description": {
      "html": "The <code>canplaythrough</code> event is fired when the user agent can play the media, and estimates that enough data has been loaded to play the media up to its end without having to stop for further buffering of content. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like oncanplaythrough) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The canplaythrough event is fired when the user agent can play the media, and estimates that enough data has been loaded to play the media up to its end without having to stop for further buffering of content. That said, it's better to use addEventListener instead of \"on\" event attributes (like oncanplaythrough) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onchange": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onchange.asp\" target=\"_blank\">onchange</a>",
      "text": "onchange"
    },
    "url": "https://www.w3schools.com/jsref/event_onchange.asp",
    "status": "standard",
    "description": {
      "html": "The onchange event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList/change_event\" target=\"_blank\">AudioTrackList</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event\" target=\"_blank\">HTMLElement</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList/change_event\" target=\"_blank\">TextTrackList</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/VideoTrackList/change_event\" target=\"_blank\">VideoTrackList</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onchange) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The onchange event can be used on a few different types of elements, including AudioTrackList, HTMLElement, TextTrackList, and VideoTrackList. That said, it's better to use addEventListener instead of \"on\" event attributes (like onchange) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onclick": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onclick.asp\" target=\"_blank\">onclick</a>",
      "text": "onclick"
    },
    "url": "https://www.w3schools.com/jsref/event_onclick.asp",
    "status": "standard",
    "description": {
      "html": "An element receives a <strong><code>click</code></strong> event when you press and release a button on your mouse (or other pointer device) while the pointer is over that element. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onclick) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "An element receives a click event when you press and release a button on your mouse (or other pointer device) while the pointer is over that element. That said, it's better to use addEventListener instead of \"on\" event attributes (like onclick) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "oncontextmenu": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_oncontextmenu.asp\" target=\"_blank\">oncontextmenu</a>",
      "text": "oncontextmenu"
    },
    "url": "https://www.w3schools.com/jsref/event_oncontextmenu.asp",
    "status": "standard",
    "description": {
      "html": "The <strong><code>contextmenu</code></strong> event fires when the user attempts to open a context menu. This event is typically triggered by clicking the right mouse button, or by pressing the context menu key. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like oncontextmenu) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The contextmenu event fires when the user attempts to open a context menu. This event is typically triggered by clicking the right mouse button, or by pressing the context menu key. That said, it's better to use addEventListener instead of \"on\" event attributes (like oncontextmenu) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "oncopy": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_oncopy.asp\" target=\"_blank\">oncopy</a>",
      "text": "oncopy"
    },
    "url": "https://www.w3schools.com/jsref/event_oncopy.asp",
    "status": "standard",
    "description": {
      "html": "The oncopy event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/copy_event\" target=\"_blank\">Document</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/copy_event\" target=\"_blank\">Element</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/SVGGraphicsElement/copy_event\" target=\"_blank\">SVGGraphicsElement</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/copy_event\" target=\"_blank\">Window</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like oncopy) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The oncopy event can be used on a few different types of elements, including Document, Element, SVGGraphicsElement, and Window. That said, it's better to use addEventListener instead of \"on\" event attributes (like oncopy) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "oncut": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_oncut.asp\" target=\"_blank\">oncut</a>",
      "text": "oncut"
    },
    "url": "https://www.w3schools.com/jsref/event_oncut.asp",
    "status": "standard",
    "description": {
      "html": "The oncut event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/cut_event\" target=\"_blank\">Document</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/cut_event\" target=\"_blank\">Element</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/SVGGraphicsElement/cut_event\" target=\"_blank\">SVGGraphicsElement</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/cut_event\" target=\"_blank\">Window</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like oncut) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The oncut event can be used on a few different types of elements, including Document, Element, SVGGraphicsElement, and Window. That said, it's better to use addEventListener instead of \"on\" event attributes (like oncut) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "ondblclick": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_ondblclick.asp\" target=\"_blank\">ondblclick</a>",
      "text": "ondblclick"
    },
    "url": "https://www.w3schools.com/jsref/event_ondblclick.asp",
    "status": "standard",
    "description": {
      "html": "The <strong><code>dblclick</code></strong> event fires when a pointing device button (such as a mouse&apos;s primary button) is double-clicked; that is, when it&apos;s rapidly clicked twice on a single element within a very short span of time. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like ondblclick) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The dblclick event fires when a pointing device button (such as a mouse's primary button) is double-clicked; that is, when it's rapidly clicked twice on a single element within a very short span of time. That said, it's better to use addEventListener instead of \"on\" event attributes (like ondblclick) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "ondrag": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_ondrag.asp\" target=\"_blank\">ondrag</a>",
      "text": "ondrag"
    },
    "url": "https://www.w3schools.com/jsref/event_ondrag.asp",
    "status": "standard",
    "description": {
      "html": "The <code>drag</code> event is fired every few hundred milliseconds as an element or text selection is being dragged by the user. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like ondrag) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The drag event is fired every few hundred milliseconds as an element or text selection is being dragged by the user. That said, it's better to use addEventListener instead of \"on\" event attributes (like ondrag) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "ondragend": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_ondragend.asp\" target=\"_blank\">ondragend</a>",
      "text": "ondragend"
    },
    "url": "https://www.w3schools.com/jsref/event_ondragend.asp",
    "status": "standard",
    "description": {
      "html": "The <code>dragend</code> event is fired when a drag operation is being ended (by releasing a mouse button or hitting the escape key). That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like ondragend) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The dragend event is fired when a drag operation is being ended (by releasing a mouse button or hitting the escape key). That said, it's better to use addEventListener instead of \"on\" event attributes (like ondragend) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "ondragenter": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_ondragenter.asp\" target=\"_blank\">ondragenter</a>",
      "text": "ondragenter"
    },
    "url": "https://www.w3schools.com/jsref/event_ondragenter.asp",
    "status": "standard",
    "description": {
      "html": "The <code>dragenter</code> event is fired when a dragged element or text selection enters a valid drop target. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like ondragenter) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The dragenter event is fired when a dragged element or text selection enters a valid drop target. That said, it's better to use addEventListener instead of \"on\" event attributes (like ondragenter) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "ondragleave": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_ondragleave.asp\" target=\"_blank\">ondragleave</a>",
      "text": "ondragleave"
    },
    "url": "https://www.w3schools.com/jsref/event_ondragleave.asp",
    "status": "standard",
    "description": {
      "html": "The <code>dragleave</code> event is fired when a dragged element or text selection leaves a valid drop target. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like ondragleave) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The dragleave event is fired when a dragged element or text selection leaves a valid drop target. That said, it's better to use addEventListener instead of \"on\" event attributes (like ondragleave) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "ondragover": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_ondragover.asp\" target=\"_blank\">ondragover</a>",
      "text": "ondragover"
    },
    "url": "https://www.w3schools.com/jsref/event_ondragover.asp",
    "status": "standard",
    "description": {
      "html": "The <code>dragover</code> event is fired when an element or text selection is being dragged over a valid drop target (every few hundred milliseconds). That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like ondragover) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The dragover event is fired when an element or text selection is being dragged over a valid drop target (every few hundred milliseconds). That said, it's better to use addEventListener instead of \"on\" event attributes (like ondragover) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "ondragstart": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_ondragstart.asp\" target=\"_blank\">ondragstart</a>",
      "text": "ondragstart"
    },
    "url": "https://www.w3schools.com/jsref/event_ondragstart.asp",
    "status": "standard",
    "description": {
      "html": "The <code>dragstart</code> event is fired when the user starts dragging an element or text selection. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like ondragstart) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The dragstart event is fired when the user starts dragging an element or text selection. That said, it's better to use addEventListener instead of \"on\" event attributes (like ondragstart) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "ondrop": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_ondrop.asp\" target=\"_blank\">ondrop</a>",
      "text": "ondrop"
    },
    "url": "https://www.w3schools.com/jsref/event_ondrop.asp",
    "status": "standard",
    "description": {
      "html": "The <strong><code>drop</code></strong> event is fired when an element or text selection is dropped on a valid drop target. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like ondrop) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The drop event is fired when an element or text selection is dropped on a valid drop target. That said, it's better to use addEventListener instead of \"on\" event attributes (like ondrop) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "ondurationchange": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_ondurationchange.asp\" target=\"_blank\">ondurationchange</a>",
      "text": "ondurationchange"
    },
    "url": "https://www.w3schools.com/jsref/event_ondurationchange.asp",
    "status": "standard",
    "description": {
      "html": "The <code>durationchange</code> event is fired when the <code>duration</code> attribute has been updated. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like ondurationchange) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The durationchange event is fired when the duration attribute has been updated. That said, it's better to use addEventListener instead of \"on\" event attributes (like ondurationchange) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onended": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onended.asp\" target=\"_blank\">onended</a>",
      "text": "onended"
    },
    "url": "https://www.w3schools.com/jsref/event_onended.asp",
    "status": "standard",
    "description": {
      "html": "The onended event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/AudioScheduledSourceNode/ended_event\" target=\"_blank\">AudioScheduledSourceNode</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/ended_event\" target=\"_blank\">HTMLMediaElement</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/ended_event\" target=\"_blank\">MediaStreamTrack</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onended) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The onended event can be used on a few different types of elements, including AudioScheduledSourceNode, HTMLMediaElement, and MediaStreamTrack. That said, it's better to use addEventListener instead of \"on\" event attributes (like onended) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onerror": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onerror.asp\" target=\"_blank\">onerror</a>",
      "text": "onerror"
    },
    "url": "https://www.w3schools.com/jsref/event_onerror.asp",
    "status": "standard",
    "description": {
      "html": "The onerror event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/error_event\" target=\"_blank\">Element</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/EventSource/error_event\" target=\"_blank\">EventSource</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/FileReader/error_event\" target=\"_blank\">FileReader</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/error_event\" target=\"_blank\">HTMLMediaElement</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/IDBTransaction/error_event\" target=\"_blank\">IDBDatabase</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/error_event\" target=\"_blank\">IDBRequest</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/IDBTransaction/error_event\" target=\"_blank\">IDBTransaction</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/error_event\" target=\"_blank\">MediaRecorder</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/error_event\" target=\"_blank\">RTCDataChannel</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCDtlsTransport/error_event\" target=\"_blank\">RTCDtlsTransport</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/error_event\" target=\"_blank\">SpeechRecognition</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance/error_event\" target=\"_blank\">SpeechSynthesisUtterance</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/SVGElement/error_event\" target=\"_blank\">SVGElement</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/error_event\" target=\"_blank\">WebSocket</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/error_event\" target=\"_blank\">Window</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/error_event\" target=\"_blank\">XMLHttpRequest</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onerror) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The onerror event can be used on a few different types of elements, including Element, EventSource, FileReader, HTMLMediaElement, IDBDatabase, IDBRequest, IDBTransaction, MediaRecorder, RTCDataChannel, RTCDtlsTransport, SpeechRecognition, SpeechSynthesisUtterance, SVGElement, WebSocket, Window, and XMLHttpRequest. That said, it's better to use addEventListener instead of \"on\" event attributes (like onerror) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onfocus": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onfocus.asp\" target=\"_blank\">onfocus</a>",
      "text": "onfocus"
    },
    "url": "https://www.w3schools.com/jsref/event_onfocus.asp",
    "status": "standard",
    "description": {
      "html": "The onfocus event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/focus_event\" target=\"_blank\">Element</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/focus_event\" target=\"_blank\">Window</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onfocus) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The onfocus event can be used on a few different types of elements, including Element, and Window. That said, it's better to use addEventListener instead of \"on\" event attributes (like onfocus) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onfocusin": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onfocusin.asp\" target=\"_blank\">onfocusin</a>",
      "text": "onfocusin"
    },
    "url": "https://www.w3schools.com/jsref/event_onfocusin.asp",
    "status": "standard",
    "description": {
      "html": "The <strong><code>focusin</code></strong> event fires when an element has received focus, after the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/focus_event\" title=\"focus\"><code>focus</code></a> event. The two events differ in that <code>focusin</code> bubbles, while <code>focus</code> does not. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onfocusin) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The focusin event fires when an element has received focus, after the focus event. The two events differ in that focusin bubbles, while focus does not. That said, it's better to use addEventListener instead of \"on\" event attributes (like onfocusin) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onfocusout": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onfocusout.asp\" target=\"_blank\">onfocusout</a>",
      "text": "onfocusout"
    },
    "url": "https://www.w3schools.com/jsref/event_onfocusout.asp",
    "status": "standard",
    "description": {
      "html": "The <strong><code>focusout</code></strong> event fires when an element has lost focus, after the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/blur_event\" title=\"blur\"><code>blur</code></a> event. The two events differ in that <code>focusout</code> bubbles, while <code>blur</code> does not. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onfocusout) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The focusout event fires when an element has lost focus, after the blur event. The two events differ in that focusout bubbles, while blur does not. That said, it's better to use addEventListener instead of \"on\" event attributes (like onfocusout) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onfullscreenchange": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onfullscreenchange.asp\" target=\"_blank\">onfullscreenchange</a>",
      "text": "onfullscreenchange"
    },
    "url": "https://www.w3schools.com/jsref/event_onfullscreenchange.asp",
    "status": "standard",
    "description": {
      "html": "The onfullscreenchange event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/fullscreenchange_event\" target=\"_blank\">Document</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/fullscreenchange_event\" target=\"_blank\">Element</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onfullscreenchange) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The onfullscreenchange event can be used on a few different types of elements, including Document, and Element. That said, it's better to use addEventListener instead of \"on\" event attributes (like onfullscreenchange) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onfullscreenerror": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onfullscreenerror.asp\" target=\"_blank\">onfullscreenerror</a>",
      "text": "onfullscreenerror"
    },
    "url": "https://www.w3schools.com/jsref/event_onfullscreenerror.asp",
    "status": "standard",
    "description": {
      "html": "The onfullscreenerror event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/fullscreenerror_event\" target=\"_blank\">Document</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/fullscreenerror_event\" target=\"_blank\">Element</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onfullscreenerror) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The onfullscreenerror event can be used on a few different types of elements, including Document, and Element. That said, it's better to use addEventListener instead of \"on\" event attributes (like onfullscreenerror) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onhashchange": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onhashchange.asp\" target=\"_blank\">onhashchange</a>",
      "text": "onhashchange"
    },
    "url": "https://www.w3schools.com/jsref/event_onhashchange.asp",
    "status": "standard",
    "description": {
      "html": "The <strong><code>hashchange</code></strong> event is fired when the fragment identifier of the URL has changed (the part of the URL beginning with and following the <code>#</code> symbol). That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onhashchange) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The hashchange event is fired when the fragment identifier of the URL has changed (the part of the URL beginning with and following the # symbol). That said, it's better to use addEventListener instead of \"on\" event attributes (like onhashchange) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "oninput": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_oninput.asp\" target=\"_blank\">oninput</a>",
      "text": "oninput"
    },
    "url": "https://www.w3schools.com/jsref/event_oninput.asp",
    "status": "standard",
    "description": {
      "html": "The <strong><code>input</code></strong> event fires when the <code>value</code> of an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a>, or <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a> element has been changed. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like oninput) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The input event fires when the value of an <input>, <select>, or <textarea> element has been changed. That said, it's better to use addEventListener instead of \"on\" event attributes (like oninput) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "oninvalid": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_oninvalid.asp\" target=\"_blank\">oninvalid</a>",
      "text": "oninvalid"
    },
    "url": "https://www.w3schools.com/jsref/event_oninvalid.asp",
    "status": "standard",
    "description": {
      "html": "The <strong><code>invalid</code></strong> event fires when a submittable element has been checked for validity and doesn&apos;t satisfy its constraints. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like oninvalid) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The invalid event fires when a submittable element has been checked for validity and doesn't satisfy its constraints. That said, it's better to use addEventListener instead of \"on\" event attributes (like oninvalid) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onkeydown": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onkeydown.asp\" target=\"_blank\">onkeydown</a>",
      "text": "onkeydown"
    },
    "url": "https://www.w3schools.com/jsref/event_onkeydown.asp",
    "status": "standard",
    "description": {
      "html": "The onkeydown event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/keydown_event\" target=\"_blank\">Document</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/keydown_event\" target=\"_blank\">Element</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onkeydown) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The onkeydown event can be used on a few different types of elements, including Document, and Element. That said, it's better to use addEventListener instead of \"on\" event attributes (like onkeydown) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onkeypress": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onkeypress.asp\" target=\"_blank\">onkeypress</a>",
      "text": "onkeypress"
    },
    "url": "https://www.w3schools.com/jsref/event_onkeypress.asp",
    "status": "standard",
    "description": {
      "html": "The onkeypress event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/keypress_event\" target=\"_blank\">Document</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/keypress_event\" target=\"_blank\">Element</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onkeypress) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The onkeypress event can be used on a few different types of elements, including Document, and Element. That said, it's better to use addEventListener instead of \"on\" event attributes (like onkeypress) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onkeyup": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onkeyup.asp\" target=\"_blank\">onkeyup</a>",
      "text": "onkeyup"
    },
    "url": "https://www.w3schools.com/jsref/event_onkeyup.asp",
    "status": "standard",
    "description": {
      "html": "The onkeyup event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/keyup_event\" target=\"_blank\">Document</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/keyup_event\" target=\"_blank\">Element</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onkeyup) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The onkeyup event can be used on a few different types of elements, including Document, and Element. That said, it's better to use addEventListener instead of \"on\" event attributes (like onkeyup) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onload": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onload.asp\" target=\"_blank\">onload</a>",
      "text": "onload"
    },
    "url": "https://www.w3schools.com/jsref/event_onload.asp",
    "status": "standard",
    "description": {
      "html": "The onload event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/FileReader/load_event\" target=\"_blank\">FileReader</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/SVGElement/load_event\" target=\"_blank\">SVGElement</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\" target=\"_blank\">Window</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/load_event\" target=\"_blank\">XMLHttpRequest</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onload) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The onload event can be used on a few different types of elements, including FileReader, SVGElement, Window, and XMLHttpRequest. That said, it's better to use addEventListener instead of \"on\" event attributes (like onload) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onloadeddata": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onloadeddata.asp\" target=\"_blank\">onloadeddata</a>",
      "text": "onloadeddata"
    },
    "url": "https://www.w3schools.com/jsref/event_onloadeddata.asp",
    "status": "standard",
    "description": {
      "html": "The <strong><code>loadeddata</code></strong> event is fired when the frame at the current playback position of the media has finished loading; often the first frame. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onloadeddata) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The loadeddata event is fired when the frame at the current playback position of the media has finished loading; often the first frame. That said, it's better to use addEventListener instead of \"on\" event attributes (like onloadeddata) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onloadedmetadata": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onloadedmetadata.asp\" target=\"_blank\">onloadedmetadata</a>",
      "text": "onloadedmetadata"
    },
    "url": "https://www.w3schools.com/jsref/event_onloadedmetadata.asp",
    "status": "standard",
    "description": {
      "html": "The <code>loadedmetadata</code> event is fired when the metadata has been loaded. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onloadedmetadata) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The loadedmetadata event is fired when the metadata has been loaded. That said, it's better to use addEventListener instead of \"on\" event attributes (like onloadedmetadata) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onloadstart": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onloadstart.asp\" target=\"_blank\">onloadstart</a>",
      "text": "onloadstart"
    },
    "url": "https://www.w3schools.com/jsref/event_onloadstart.asp",
    "status": "standard",
    "description": {
      "html": "The onloadstart event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/FileReader/loadstart_event\" target=\"_blank\">FileReader</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadstart_event\" target=\"_blank\">HTMLMediaElement</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/loadstart_event\" target=\"_blank\">XMLHttpRequest</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onloadstart) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The onloadstart event can be used on a few different types of elements, including FileReader, HTMLMediaElement, and XMLHttpRequest. That said, it's better to use addEventListener instead of \"on\" event attributes (like onloadstart) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onmessage": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onmessage.asp\" target=\"_blank\">onmessage</a>",
      "text": "onmessage"
    },
    "url": "https://www.w3schools.com/jsref/event_onmessage.asp",
    "status": "standard",
    "description": {
      "html": "The onmessage event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/BroadcastChannel/message_event\" target=\"_blank\">BroadcastChannel</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DedicatedWorkerGlobalScope/message_event\" target=\"_blank\">DedicatedWorkerGlobalScope</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/EventSource/message_event\" target=\"_blank\">EventSource</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MessagePort/message_event\" target=\"_blank\">MessagePort</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/message_event\" target=\"_blank\">RTCDataChannel</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/message_event\" target=\"_blank\">ServiceWorkerContainer</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/message_event\" target=\"_blank\">ServiceWorkerGlobalScope</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/message_event\" target=\"_blank\">WebSocket</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/message_event\" target=\"_blank\">Window</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Worker/message_event\" target=\"_blank\">Worker</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onmessage) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The onmessage event can be used on a few different types of elements, including BroadcastChannel, DedicatedWorkerGlobalScope, EventSource, MessagePort, RTCDataChannel, ServiceWorkerContainer, ServiceWorkerGlobalScope, WebSocket, Window, and Worker. That said, it's better to use addEventListener instead of \"on\" event attributes (like onmessage) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onmousedown": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onmousedown.asp\" target=\"_blank\">onmousedown</a>",
      "text": "onmousedown"
    },
    "url": "https://www.w3schools.com/jsref/event_onmousedown.asp",
    "status": "standard",
    "description": {
      "html": "The <strong><code>mousedown</code></strong> event is fired at an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element\"><code>Element</code></a> when a pointing device button is pressed while the pointer is inside the element. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onmousedown) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The mousedown event is fired at an Element when a pointing device button is pressed while the pointer is inside the element. That said, it's better to use addEventListener instead of \"on\" event attributes (like onmousedown) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onmouseenter": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onmouseenter.asp\" target=\"_blank\">onmouseenter</a>",
      "text": "onmouseenter"
    },
    "url": "https://www.w3schools.com/jsref/event_onmouseenter.asp",
    "status": "standard",
    "description": {
      "html": "The <strong><code>mouseenter</code></strong> event is fired at an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element\"><code>Element</code></a> when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onmouseenter) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The mouseenter event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired. That said, it's better to use addEventListener instead of \"on\" event attributes (like onmouseenter) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onmouseleave": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onmouseleave.asp\" target=\"_blank\">onmouseleave</a>",
      "text": "onmouseleave"
    },
    "url": "https://www.w3schools.com/jsref/event_onmouseleave.asp",
    "status": "standard",
    "description": {
      "html": "The <strong><code>mouseleave</code></strong> event is fired at an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element\"><code>Element</code></a> when the cursor of a pointing device (usually a mouse) is moved out of it. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onmouseleave) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The mouseleave event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it. That said, it's better to use addEventListener instead of \"on\" event attributes (like onmouseleave) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onmousemove": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onmousemove.asp\" target=\"_blank\">onmousemove</a>",
      "text": "onmousemove"
    },
    "url": "https://www.w3schools.com/jsref/event_onmousemove.asp",
    "status": "standard",
    "description": {
      "html": "The <code>mousemove</code> event is fired at an element when a pointing device (usually a mouse) is moved while the cursor&apos;s hotspot is inside it. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onmousemove) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The mousemove event is fired at an element when a pointing device (usually a mouse) is moved while the cursor's hotspot is inside it. That said, it's better to use addEventListener instead of \"on\" event attributes (like onmousemove) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onmouseover": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onmouseover.asp\" target=\"_blank\">onmouseover</a>",
      "text": "onmouseover"
    },
    "url": "https://www.w3schools.com/jsref/event_onmouseover.asp",
    "status": "standard",
    "description": {
      "html": "The <strong><code>mouseover</code></strong> event is fired at an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element\"><code>Element</code></a> when a pointing device (such as a mouse or trackpad) is used to move the cursor onto the element or one of its child elements. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onmouseover) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The mouseover event is fired at an Element when a pointing device (such as a mouse or trackpad) is used to move the cursor onto the element or one of its child elements. That said, it's better to use addEventListener instead of \"on\" event attributes (like onmouseover) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onmouseout": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onmouseout.asp\" target=\"_blank\">onmouseout</a>",
      "text": "onmouseout"
    },
    "url": "https://www.w3schools.com/jsref/event_onmouseout.asp",
    "status": "standard",
    "description": {
      "html": "The <strong><code>mouseout</code></strong> event is fired at an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element\"><code>Element</code></a> when a pointing device (usually a mouse) is used to move the cursor so that it is no longer contained within the element or one of its children. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onmouseout) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The mouseout event is fired at an Element when a pointing device (usually a mouse) is used to move the cursor so that it is no longer contained within the element or one of its children. That said, it's better to use addEventListener instead of \"on\" event attributes (like onmouseout) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onmouseup": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onmouseup.asp\" target=\"_blank\">onmouseup</a>",
      "text": "onmouseup"
    },
    "url": "https://www.w3schools.com/jsref/event_onmouseup.asp",
    "status": "standard",
    "description": {
      "html": "The <strong><code>mouseup</code></strong> event is fired at an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element\"><code>Element</code></a> when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onmouseup) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The mouseup event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. That said, it's better to use addEventListener instead of \"on\" event attributes (like onmouseup) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onoffline": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onoffline.asp\" target=\"_blank\">onoffline</a>",
      "text": "onoffline"
    },
    "url": "https://www.w3schools.com/jsref/event_onoffline.asp",
    "status": "standard",
    "description": {
      "html": "The <strong><code>offline</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window\"><code>Window</code></a> interface is fired when the browser has lost access to the network and the value of <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Navigator/onLine\"><code>Navigator.onLine</code></a> switches to <code>false</code>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onoffline) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The offline event of the Window interface is fired when the browser has lost access to the network and the value of Navigator.onLine switches to false. That said, it's better to use addEventListener instead of \"on\" event attributes (like onoffline) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "ononline": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_ononline.asp\" target=\"_blank\">ononline</a>",
      "text": "ononline"
    },
    "url": "https://www.w3schools.com/jsref/event_ononline.asp",
    "status": "standard",
    "description": {
      "html": "The <strong><code>online</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window\"><code>Window</code></a> interface is fired when the browser has gained access to the network and the value of <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Navigator/onLine\"><code>Navigator.onLine</code></a> switches to <code>true</code>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like ononline) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The online event of the Window interface is fired when the browser has gained access to the network and the value of Navigator.onLine switches to true. That said, it's better to use addEventListener instead of \"on\" event attributes (like ononline) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onopen": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onopen.asp\" target=\"_blank\">onopen</a>",
      "text": "onopen"
    },
    "url": "https://www.w3schools.com/jsref/event_onopen.asp",
    "status": "standard",
    "description": {
      "html": "The onopen event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/EventSource/open_event\" target=\"_blank\">EventSource</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/open_event\" target=\"_blank\">RTCDataChannel</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/open_event\" target=\"_blank\">WebSocket</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onopen) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The onopen event can be used on a few different types of elements, including EventSource, RTCDataChannel, and WebSocket. That said, it's better to use addEventListener instead of \"on\" event attributes (like onopen) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onpagehide": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onpagehide.asp\" target=\"_blank\">onpagehide</a>",
      "text": "onpagehide"
    },
    "url": "https://www.w3schools.com/jsref/event_onpagehide.asp",
    "status": "standard",
    "description": {
      "html": "The <strong><code>pagehide</code></strong> event is sent to a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window\"><code>Window</code></a> when the browser hides the current page in the process of presenting a different page from the session&apos;s history. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onpagehide) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The pagehide event is sent to a Window when the browser hides the current page in the process of presenting a different page from the session's history. That said, it's better to use addEventListener instead of \"on\" event attributes (like onpagehide) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onpageshow": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onpageshow.asp\" target=\"_blank\">onpageshow</a>",
      "text": "onpageshow"
    },
    "url": "https://www.w3schools.com/jsref/event_onpageshow.asp",
    "status": "standard",
    "description": {
      "html": "The <strong><code>pageshow</code></strong> event is sent to a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window\"><code>Window</code></a> when the browser displays the window&apos;s document due to navigation. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onpageshow) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The pageshow event is sent to a Window when the browser displays the window's document due to navigation. That said, it's better to use addEventListener instead of \"on\" event attributes (like onpageshow) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onpaste": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onpaste.asp\" target=\"_blank\">onpaste</a>",
      "text": "onpaste"
    },
    "url": "https://www.w3schools.com/jsref/event_onpaste.asp",
    "status": "standard",
    "description": {
      "html": "The onpaste event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/paste_event\" target=\"_blank\">Document</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/paste_event\" target=\"_blank\">Element</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/SVGGraphicsElement/paste_event\" target=\"_blank\">SVGGraphicsElement</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/paste_event\" target=\"_blank\">Window</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onpaste) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The onpaste event can be used on a few different types of elements, including Document, Element, SVGGraphicsElement, and Window. That said, it's better to use addEventListener instead of \"on\" event attributes (like onpaste) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onpause": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onpause.asp\" target=\"_blank\">onpause</a>",
      "text": "onpause"
    },
    "url": "https://www.w3schools.com/jsref/event_onpause.asp",
    "status": "standard",
    "description": {
      "html": "The onpause event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/pause_event\" target=\"_blank\">HTMLMediaElement</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance/pause_event\" target=\"_blank\">SpeechSynthesisUtterance</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onpause) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The onpause event can be used on a few different types of elements, including HTMLMediaElement, and SpeechSynthesisUtterance. That said, it's better to use addEventListener instead of \"on\" event attributes (like onpause) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onplay": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onplay.asp\" target=\"_blank\">onplay</a>",
      "text": "onplay"
    },
    "url": "https://www.w3schools.com/jsref/event_onplay.asp",
    "status": "standard",
    "description": {
      "html": "The <code>play</code> event is fired when the <code>paused</code> property is changed from <code>true</code> to <code>false</code>, as a result of the <code>play</code> method, or the <code>autoplay</code> attribute. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onplay) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The play event is fired when the paused property is changed from true to false, as a result of the play method, or the autoplay attribute. That said, it's better to use addEventListener instead of \"on\" event attributes (like onplay) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onplaying": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onplaying.asp\" target=\"_blank\">onplaying</a>",
      "text": "onplaying"
    },
    "url": "https://www.w3schools.com/jsref/event_onplaying.asp",
    "status": "standard",
    "description": {
      "html": "The <code>playing</code> event is fired after playback is first started, and whenever it is restarted. For example it is fired when playback resumes after having been paused or delayed due to lack of data. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onplaying) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The playing event is fired after playback is first started, and whenever it is restarted. For example it is fired when playback resumes after having been paused or delayed due to lack of data. That said, it's better to use addEventListener instead of \"on\" event attributes (like onplaying) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onprogress": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onprogress.asp\" target=\"_blank\">onprogress</a>",
      "text": "onprogress"
    },
    "url": "https://www.w3schools.com/jsref/event_onprogress.asp",
    "status": "standard",
    "description": {
      "html": "The onprogress event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/FileReader/progress_event\" target=\"_blank\">FileReader</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/progress_event\" target=\"_blank\">HTMLMediaElement</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/progress_event\" target=\"_blank\">XMLHttpRequest</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onprogress) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The onprogress event can be used on a few different types of elements, including FileReader, HTMLMediaElement, and XMLHttpRequest. That said, it's better to use addEventListener instead of \"on\" event attributes (like onprogress) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onratechange": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onratechange.asp\" target=\"_blank\">onratechange</a>",
      "text": "onratechange"
    },
    "url": "https://www.w3schools.com/jsref/event_onratechange.asp",
    "status": "standard",
    "description": {
      "html": "The <code>ratechange</code> event is fired when the playback rate has changed. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onratechange) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The ratechange event is fired when the playback rate has changed. That said, it's better to use addEventListener instead of \"on\" event attributes (like onratechange) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onresize": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onresize.asp\" target=\"_blank\">onresize</a>",
      "text": "onresize"
    },
    "url": "https://www.w3schools.com/jsref/event_onresize.asp",
    "status": "standard",
    "description": {
      "html": "The onresize event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/PictureInPictureWindow/resize_event\" target=\"_blank\">PictureInPictureWindow</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/resize_event\" target=\"_blank\">VisualViewport</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/resize_event\" target=\"_blank\">Window</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onresize) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The onresize event can be used on a few different types of elements, including PictureInPictureWindow, VisualViewport, and Window. That said, it's better to use addEventListener instead of \"on\" event attributes (like onresize) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onreset": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onreset.asp\" target=\"_blank\">onreset</a>",
      "text": "onreset"
    },
    "url": "https://www.w3schools.com/jsref/event_onreset.asp",
    "status": "standard",
    "description": {
      "html": "The onreset event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/reset_event\" target=\"_blank\">HTMLFormElement</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XRReferenceSpace/reset_event\" target=\"_blank\">XRReferenceSpace</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onreset) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The onreset event can be used on a few different types of elements, including HTMLFormElement, and XRReferenceSpace. That said, it's better to use addEventListener instead of \"on\" event attributes (like onreset) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onscroll": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onscroll.asp\" target=\"_blank\">onscroll</a>",
      "text": "onscroll"
    },
    "url": "https://www.w3schools.com/jsref/event_onscroll.asp",
    "status": "standard",
    "description": {
      "html": "The onscroll event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/scroll_event\" target=\"_blank\">Document</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/scroll_event\" target=\"_blank\">Element</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/scroll_event\" target=\"_blank\">VisualViewport</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onscroll) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The onscroll event can be used on a few different types of elements, including Document, Element, and VisualViewport. That said, it's better to use addEventListener instead of \"on\" event attributes (like onscroll) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onsearch": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onsearch.asp\" target=\"_blank\">onsearch</a>",
      "text": "onsearch"
    },
    "url": "https://www.w3schools.com/jsref/event_onsearch.asp",
    "status": "standard",
    "description": {
      "html": "<strong>Non-standard:</strong> This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onsearch) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future. That said, it's better to use addEventListener instead of \"on\" event attributes (like onsearch) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onseeked": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onseeked.asp\" target=\"_blank\">onseeked</a>",
      "text": "onseeked"
    },
    "url": "https://www.w3schools.com/jsref/event_onseeked.asp",
    "status": "standard",
    "description": {
      "html": "The <code>seeked</code> event is fired when a seek operation completed, the current playback position has changed, and the Boolean <code>seeking</code> attribute is changed to <code>false</code>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onseeked) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The seeked event is fired when a seek operation completed, the current playback position has changed, and the Boolean seeking attribute is changed to false. That said, it's better to use addEventListener instead of \"on\" event attributes (like onseeked) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onseeking": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onseeking.asp\" target=\"_blank\">onseeking</a>",
      "text": "onseeking"
    },
    "url": "https://www.w3schools.com/jsref/event_onseeking.asp",
    "status": "standard",
    "description": {
      "html": "The <code>seeking</code> event is fired when a seek operation starts, meaning the Boolean <code>seeking</code> attribute has changed to <code>true</code> and the media is seeking a new position. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onseeking) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The seeking event is fired when a seek operation starts, meaning the Boolean seeking attribute has changed to true and the media is seeking a new position. That said, it's better to use addEventListener instead of \"on\" event attributes (like onseeking) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onselect": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onselect.asp\" target=\"_blank\">onselect</a>",
      "text": "onselect"
    },
    "url": "https://www.w3schools.com/jsref/event_onselect.asp",
    "status": "standard",
    "description": {
      "html": "The onselect event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select_event\" target=\"_blank\">Element</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XRSession/select_event\" target=\"_blank\">XRSession</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onselect) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The onselect event can be used on a few different types of elements, including Element, and XRSession. That said, it's better to use addEventListener instead of \"on\" event attributes (like onselect) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onshow": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onshow.asp\" target=\"_blank\">onshow</a>",
      "text": "onshow"
    },
    "url": "https://www.w3schools.com/jsref/event_onshow.asp",
    "status": "standard",
    "description": {
      "html": "<strong>Deprecated:</strong> This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a target=\"_blank\" href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onshow) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time. That said, it's better to use addEventListener instead of \"on\" event attributes (like onshow) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onstalled": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onstalled.asp\" target=\"_blank\">onstalled</a>",
      "text": "onstalled"
    },
    "url": "https://www.w3schools.com/jsref/event_onstalled.asp",
    "status": "standard",
    "description": {
      "html": "The <code>stalled</code> event is fired when the user agent is trying to fetch media data, but data is unexpectedly not forthcoming. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onstalled) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The stalled event is fired when the user agent is trying to fetch media data, but data is unexpectedly not forthcoming. That said, it's better to use addEventListener instead of \"on\" event attributes (like onstalled) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onsubmit": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onsubmit.asp\" target=\"_blank\">onsubmit</a>",
      "text": "onsubmit"
    },
    "url": "https://www.w3schools.com/jsref/event_onsubmit.asp",
    "status": "standard",
    "description": {
      "html": "The <strong><code>submit</code></strong> event fires when a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a> is submitted. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onsubmit) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The submit event fires when a <form> is submitted. That said, it's better to use addEventListener instead of \"on\" event attributes (like onsubmit) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onsuspend": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onsuspend.asp\" target=\"_blank\">onsuspend</a>",
      "text": "onsuspend"
    },
    "url": "https://www.w3schools.com/jsref/event_onsuspend.asp",
    "status": "standard",
    "description": {
      "html": "The <code>suspend</code> event is fired when media data loading has been suspended. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onsuspend) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The suspend event is fired when media data loading has been suspended. That said, it's better to use addEventListener instead of \"on\" event attributes (like onsuspend) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "ontimeupdate": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_ontimeupdate.asp\" target=\"_blank\">ontimeupdate</a>",
      "text": "ontimeupdate"
    },
    "url": "https://www.w3schools.com/jsref/event_ontimeupdate.asp",
    "status": "standard",
    "description": {
      "html": "The <code>timeupdate</code> event is fired when the time indicated by the <code>currentTime</code> attribute has been updated. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like ontimeupdate) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The timeupdate event is fired when the time indicated by the currentTime attribute has been updated. That said, it's better to use addEventListener instead of \"on\" event attributes (like ontimeupdate) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "ontoggle": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_ontoggle.asp\" target=\"_blank\">ontoggle</a>",
      "text": "ontoggle"
    },
    "url": "https://www.w3schools.com/jsref/event_ontoggle.asp",
    "status": "standard",
    "description": {
      "html": "The <strong><code>toggle</code></strong> event fires when the <code>open</code>/<code>closed</code> state of a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details\"><code>&lt;details&gt;</code></a> element is toggled. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like ontoggle) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The toggle event fires when the open/closed state of a <details> element is toggled. That said, it's better to use addEventListener instead of \"on\" event attributes (like ontoggle) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "ontouchcancel": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_ontouchcancel.asp\" target=\"_blank\">ontouchcancel</a>",
      "text": "ontouchcancel"
    },
    "url": "https://www.w3schools.com/jsref/event_ontouchcancel.asp",
    "status": "standard",
    "description": {
      "html": "The ontouchcancel event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/touchcancel_event\" target=\"_blank\">Document</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/touchcancel_event\" target=\"_blank\">Element</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like ontouchcancel) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The ontouchcancel event can be used on a few different types of elements, including Document, and Element. That said, it's better to use addEventListener instead of \"on\" event attributes (like ontouchcancel) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "ontouchend": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_ontouchend.asp\" target=\"_blank\">ontouchend</a>",
      "text": "ontouchend"
    },
    "url": "https://www.w3schools.com/jsref/event_ontouchend.asp",
    "status": "standard",
    "description": {
      "html": "The ontouchend event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/touchend_event\" target=\"_blank\">Document</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/touchend_event\" target=\"_blank\">Element</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like ontouchend) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The ontouchend event can be used on a few different types of elements, including Document, and Element. That said, it's better to use addEventListener instead of \"on\" event attributes (like ontouchend) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "ontouchmove": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_ontouchmove.asp\" target=\"_blank\">ontouchmove</a>",
      "text": "ontouchmove"
    },
    "url": "https://www.w3schools.com/jsref/event_ontouchmove.asp",
    "status": "standard",
    "description": {
      "html": "The ontouchmove event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/touchmove_event\" target=\"_blank\">Document</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/touchmove_event\" target=\"_blank\">Element</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like ontouchmove) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The ontouchmove event can be used on a few different types of elements, including Document, and Element. That said, it's better to use addEventListener instead of \"on\" event attributes (like ontouchmove) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "ontouchstart": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_ontouchstart.asp\" target=\"_blank\">ontouchstart</a>",
      "text": "ontouchstart"
    },
    "url": "https://www.w3schools.com/jsref/event_ontouchstart.asp",
    "status": "standard",
    "description": {
      "html": "The ontouchstart event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/touchstart_event\" target=\"_blank\">Document</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/touchstart_event\" target=\"_blank\">Element</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like ontouchstart) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The ontouchstart event can be used on a few different types of elements, including Document, and Element. That said, it's better to use addEventListener instead of \"on\" event attributes (like ontouchstart) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "ontransitionend": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_ontransitionend.asp\" target=\"_blank\">ontransitionend</a>",
      "text": "ontransitionend"
    },
    "url": "https://www.w3schools.com/jsref/event_ontransitionend.asp",
    "status": "standard",
    "description": {
      "html": "The ontransitionend event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/transitionend_event\" target=\"_blank\">Document</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/transitionend_event\" target=\"_blank\">Element</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/transitionend_event\" target=\"_blank\">Window</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like ontransitionend) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The ontransitionend event can be used on a few different types of elements, including Document, Element, and Window. That said, it's better to use addEventListener instead of \"on\" event attributes (like ontransitionend) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onunload": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onunload.asp\" target=\"_blank\">onunload</a>",
      "text": "onunload"
    },
    "url": "https://www.w3schools.com/jsref/event_onunload.asp",
    "status": "standard",
    "description": {
      "html": "<strong>Warning:</strong> Developers should avoid using this event. See &quot;Usage notes&quot; below. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onunload) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "Warning: Developers should avoid using this event. See \"Usage notes\" below. That said, it's better to use addEventListener instead of \"on\" event attributes (like onunload) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onvolumechange": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onvolumechange.asp\" target=\"_blank\">onvolumechange</a>",
      "text": "onvolumechange"
    },
    "url": "https://www.w3schools.com/jsref/event_onvolumechange.asp",
    "status": "standard",
    "description": {
      "html": "The <code>volumechange</code> event is fired when the volume has changed. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onvolumechange) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The volumechange event is fired when the volume has changed. That said, it's better to use addEventListener instead of \"on\" event attributes (like onvolumechange) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onwaiting": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onwaiting.asp\" target=\"_blank\">onwaiting</a>",
      "text": "onwaiting"
    },
    "url": "https://www.w3schools.com/jsref/event_onwaiting.asp",
    "status": "standard",
    "description": {
      "html": "The <code>waiting</code> event is fired when playback has stopped because of a temporary lack of data. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onwaiting) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The waiting event is fired when playback has stopped because of a temporary lack of data. That said, it's better to use addEventListener instead of \"on\" event attributes (like onwaiting) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  },
  "onwheel": {
    "keyword": {
      "html": "<a href=\"https://www.w3schools.com/jsref/event_onwheel.asp\" target=\"_blank\">onwheel</a>",
      "text": "onwheel"
    },
    "url": "https://www.w3schools.com/jsref/event_onwheel.asp",
    "status": "standard",
    "description": {
      "html": "The onwheel event can be used on a few different types of elements, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/wheel_event\" target=\"_blank\">Document</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/wheel_event\" target=\"_blank\">Element</a>. That said, it's better to use <a href=\"https://www.w3schools.com/jsref/met_element_addeventlistener.asp\" target=\"_blank\">addEventListener</a> instead of <code>on</code> event attributes (like onwheel) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows.",
      "text": "The onwheel event can be used on a few different types of elements, including Document, and Element. That said, it's better to use addEventListener instead of \"on\" event attributes (like onwheel) because it keeps your HTML and JavaScript separate, making your code cleaner, easier to manage, and more flexible as your project grows."
    },
    "elements": {
      "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">Global attribute</a>",
      "text": "Global attribute"
    }
  }
}
